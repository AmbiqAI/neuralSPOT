<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_arducam_camera_8c" kind="file" language="C++">
    <compoundname>ArducamCamera.c</compoundname>
    <includes refid="_arducam_camera_8h" local="yes">ArducamCamera.h</includes>
    <includes refid="_platform_8h" local="yes">Platform.h</includes>
    <includes refid="ns__camera_8h" local="yes">ns_camera.h</includes>
    <includes local="yes">ns_core.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ArducamCamera.h</label>
        <link refid="_arducam_camera_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ns_camera.h</label>
        <link refid="ns__camera_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-camera/src/arducam/ArducamCamera.c</label>
        <link refid="_arducam_camera_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Platform.h</label>
        <link refid="_platform_8h_source"/>
      </node>
      <node id="8">
        <label>arm_math.h</label>
      </node>
      <node id="6">
        <label>ns_core.h</label>
      </node>
      <node id="7">
        <label>ns_spi.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Arducam<sp/>SPI<sp/>Camera<sp/>project.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2021<sp/>Arducam<sp/>Technology<sp/>co.,<sp/>Ltd.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license,<sp/>see<sp/>the<sp/>file<sp/>LICENSE<sp/>for</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>details.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_arducam_camera_8h" kindref="compound">ArducamCamera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Platform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_camera.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_CAMERA_MAX_WAIT<sp/>1500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_FRAMES<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_TEST1<sp/>0x00<sp/><sp/></highlight><highlight class="comment">//<sp/>TEST<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_FIFO<sp/>0x04<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIFO<sp/>and<sp/>I2C<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_FIFO_2<sp/>0x07<sp/></highlight><highlight class="comment">//<sp/>FIFO<sp/>and<sp/>I2C<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_CLEAR_ID_MASK<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_START_MASK<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_RDPTR_RST_MASK<sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_WRPTR_RST_MASK<sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_CLEAR_MASK<sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_TRIG<sp/>0x44<sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VSYNC_MASK<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHUTTER_MASK<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAP_DONE_MASK<sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE1<sp/>0x45<sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>write<sp/>FIFO<sp/>size[7:0]<sp/>for<sp/>burst<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE2<sp/>0x46<sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>write<sp/>FIFO<sp/>size[15:8]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE3<sp/>0x47<sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>write<sp/>FIFO<sp/>size[18:16]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SENSOR_DATA<sp/>0x48<sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>write<sp/>FIFO<sp/>size[18:16]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BURST_FIFO_READ<sp/>0x3C<sp/><sp/></highlight><highlight class="comment">//<sp/>Burst<sp/>FIFO<sp/>read<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SINGLE_FIFO_READ<sp/>0x3D<sp/></highlight><highlight class="comment">//<sp/>Single<sp/>FIFO<sp/>read<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MSP430G2553__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PREVIEW_BUF_LEN<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PREVIEW_BUF_LEN<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPRURE_MAX_NUM<sp/>0xff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_POWER_CONTROL<sp/>0X02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_RESET<sp/>0X07</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_FORMAT<sp/>0X20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_CAPTURE_RESOLUTION<sp/>0X21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_BRIGHTNESS_CONTROL<sp/>0X22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_CONTRAST_CONTROL<sp/>0X23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SATURATION_CONTROL<sp/>0X24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_EV_CONTROL<sp/>0X25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_WHILEBALANCE_MODE_CONTROL<sp/>0X26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_COLOR_EFFECT_CONTROL<sp/>0X27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SHARPNESS_CONTROL<sp/>0X28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_AUTO_FOCUS_CONTROL<sp/>0X29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_IMAGE_QUALITY<sp/>0x2A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL<sp/>0X30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_GAIN_BIT_9_8<sp/>0X31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_GAIN_BIT_7_0<sp/>0X32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_19_16<sp/>0X33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_15_8<sp/>0X34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_7_0<sp/>0X35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_BURST_FIFO_READ_OPERATION<sp/>0X3C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SINGLE_FIFO_READ_OPERATION<sp/>0X3D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_ID<sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_YEAR_ID<sp/>0x41</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MONTH_ID<sp/>0x42</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DAY_ID<sp/>0x43</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_STATE<sp/>0x44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_FPGA_VERSION_NUMBER<sp/>0x49</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_DEVICE_ADDRESS<sp/>0X0A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_REGISTER_HIGH<sp/>0X0B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_REGISTER_LOW<sp/>0X0C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_REGISTER_VALUE<sp/>0X0D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_REGISTER_VALUE_H<sp/>0X0E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_I2C_READ_MODE<sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_STATE_IDLE<sp/>(1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_SENSOR_RESET_ENABLE<sp/>(1<sp/>&lt;&lt;<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_FORMAT_BASICS<sp/>(0<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_SET_CAPTURE_MODE<sp/>(0<sp/>&lt;&lt;<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_SET_VIDEO_MODE<sp/>(1<sp/>&lt;&lt;<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_WHILEBALANCE<sp/>0X02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_EXPOSURE<sp/>0X01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_GAIN<sp/>0X00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_TYPE_NUMBER<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>FORMAT_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>FORMAT_JPEG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>FORMAT_RGB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>FORMAT_YUV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_160X120<sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_320X240<sp/>(1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_640X480<sp/>(1<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_800X600<sp/>(1<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1280X720<sp/>(1<sp/>&lt;&lt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1280X960<sp/>(1<sp/>&lt;&lt;<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1600X1200<sp/>(1<sp/>&lt;&lt;<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1920X1080<sp/>(1<sp/>&lt;&lt;<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_2048X1536<sp/>(1<sp/>&lt;&lt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_2592X1944<sp/>(1<sp/>&lt;&lt;<sp/>9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_320x320<sp/>(1<sp/>&lt;&lt;<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_128x128<sp/>(1<sp/>&lt;&lt;<sp/>11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_96x96<sp/>(1<sp/>&lt;&lt;<sp/>12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_NORMAL<sp/>(0<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_BLUEISH<sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_REDISH<sp/>(1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_BW<sp/>(1<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_SEPIA<sp/>(1<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_NEGATIVE<sp/>(1<sp/>&lt;&lt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_GREENISH<sp/>(1<sp/>&lt;&lt;<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_OVEREXPOSURE<sp/>(1<sp/>&lt;&lt;<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_SOLARIZE<sp/>(1<sp/>&lt;&lt;<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_YELLOWISH<sp/>(1<sp/>&lt;&lt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_sdk_info" kindref="compound">SdkInfo</ref><sp/>currentSDK<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>.sdkInfo.year<sp/>=<sp/>24,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>.sdkInfo.month<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>.sdkInfo.day<sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>.sdkInfo.version<sp/>=<sp/>0x020C,<sp/></highlight><highlight class="comment">//<sp/>V2.0.11<sp/><sp/>H<sp/>bit[11:8]<sp/>M<sp/>bit[7:4]<sp/>L<sp/>bit[3:0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cameraDefaultState<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cameraDefaultFormat;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cameraDefaultResolution;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCapture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csHigh(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csLow(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeReg(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr,<sp/>uint8_t<sp/>val);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">uint8_t<sp/>readReg(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">uint8_t<sp/>busRead(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">uint8_t<sp/>busWrite(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearFifoFlag(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">uint32_t<sp/>readFifoLength(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">uint8_t<sp/>getBit(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr,<sp/>uint8_t<sp/>bit);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFifoBurst(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCapture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">uint32_t<sp/>waitI2cIdle(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">uint32_t<sp/>imageAvailable(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flushFifo(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startCapture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_camera_info" kindref="compound">CameraInfo</ref><sp/>CameraInfo_5MP<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="struct_camera_info_1abbb53648ae151fa253a9e3d9ddacdb66" kindref="member">cameraId</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;5MP&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportResolution<sp/>=<sp/>RESOLUTION_320x320<sp/>|<sp/>RESOLUTION_128x128<sp/>|<sp/>RESOLUTION_96x96<sp/>|</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESOLUTION_320X240<sp/>|<sp/>RESOLUTION_640X480<sp/>|<sp/>RESOLUTION_1280X720<sp/>|</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESOLUTION_1600X1200<sp/>|<sp/>RESOLUTION_1920X1080<sp/>|<sp/>RESOLUTION_2592X1944,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSpecialEffects<sp/>=<sp/>SPECIAL_BLUEISH<sp/>|<sp/>SPECIAL_REDISH<sp/>|<sp/>SPECIAL_BW<sp/>|<sp/>SPECIAL_SEPIA<sp/>|</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIAL_NEGATIVE<sp/>|</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIAL_GREENISH<sp/></highlight><highlight class="comment">/*|<sp/>SPECIAL_OVEREXPOSURE<sp/>|<sp/>SPECIAL_SOLARIZE*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMax<sp/>=<sp/>30000,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMin<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMax<sp/>=<sp/>1023,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMin<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportFocus<sp/>=<sp/>TRUE,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSharpness<sp/>=<sp/>FALSE,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>.deviceAddress<sp/>=<sp/>0x78,</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_camera_info" kindref="compound">CameraInfo</ref><sp/>CameraInfo_3MP<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="struct_camera_info_1abbb53648ae151fa253a9e3d9ddacdb66" kindref="member">cameraId</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;3MP&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportResolution<sp/>=<sp/>RESOLUTION_320x320<sp/>|<sp/>RESOLUTION_128x128<sp/>|<sp/>RESOLUTION_96x96<sp/>|</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESOLUTION_320X240<sp/>|<sp/>RESOLUTION_640X480<sp/>|<sp/>RESOLUTION_1280X720<sp/>|</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RESOLUTION_1600X1200<sp/>|<sp/>RESOLUTION_1920X1080<sp/>|<sp/>RESOLUTION_2048X1536,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSpecialEffects<sp/>=<sp/>SPECIAL_BLUEISH<sp/>|<sp/>SPECIAL_REDISH<sp/>|<sp/>SPECIAL_BW<sp/>|<sp/>SPECIAL_SEPIA<sp/>|</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPECIAL_NEGATIVE<sp/>|<sp/>SPECIAL_GREENISH<sp/>|<sp/>SPECIAL_YELLOWISH,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMax<sp/>=<sp/>30000,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMin<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMax<sp/>=<sp/>1023,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMin<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportFocus<sp/>=<sp/>FALSE,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSharpness<sp/>=<sp/>TRUE,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>.deviceAddress<sp/>=<sp/>0x78,</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_camera_info" kindref="compound">CameraInfo</ref><sp/>*CameraType[CAMERA_TYPE_NUMBER];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>struct<sp/>cameraDefaultState<sp/>DefaultState_5mp<sp/>=<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.cameraDefaultFormat<sp/>=<sp/>CAM_IMAGE_PIX_FMT_JPG,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.cameraDefaultResolution<sp/>=<sp/>CAM_IMAGE_MODE_WQXGA2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>struct<sp/>cameraDefaultState<sp/>DefaultState_3mp<sp/>=<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.cameraDefaultFormat<sp/>=<sp/>CAM_IMAGE_PIX_FMT_JPG,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.cameraDefaultResolution<sp/>=<sp/>CAM_IMAGE_MODE_QXGA,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>struct<sp/>cameraDefaultState*<sp/>cameraDefaultInfo[CAMERA_TYPE_NUMBER];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">uint8_t<sp/>ov3640GainValue[]<sp/>=<sp/>{0x00,<sp/>0x10,<sp/>0x18,<sp/>0x30,<sp/>0x34,<sp/>0x38,<sp/>0x3b,<sp/>0x3f,<sp/>0x72,<sp/>0x74,<sp/>0x76,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x78,<sp/>0x7a,<sp/>0x7c,<sp/>0x7e,<sp/>0xf0,<sp/>0xf1,<sp/>0xf2,<sp/>0xf3,<sp/>0xf4,<sp/>0xf5,<sp/>0xf6,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf7,<sp/>0xf8,<sp/>0xf9,<sp/>0xfa,<sp/>0xfb,<sp/>0xfc,<sp/>0xfd,<sp/>0xfe,<sp/>0xff};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateCameraInfo(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>==<sp/>SENSOR_5MP_2<sp/>||<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>==<sp/>SENSOR_3MP_2)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1aa89ea2811484145ee10ba2031df8a20d" kindref="member">myCameraInfo</ref>.<ref refid="struct_camera_info_1a3c0c6782d143fae4f0db02c2e57eb43c" kindref="member">exposureValueMax</ref><sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1aa89ea2811484145ee10ba2031df8a20d" kindref="member">myCameraInfo</ref>.<ref refid="struct_camera_info_1ae607a6b13202c4bf9fa2c58b59313fa5" kindref="member">gainValueMax</ref><sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraInit(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiBegin();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamCsOutputMode(camera-&gt;<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(camera-&gt;<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraGetSensorConfig(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cameraIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>=<sp/>readReg(camera,<sp/>CAM_REG_SENSOR_ID);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref>)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SENSOR_5MP_2:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CameraInfo_5MP.<ref refid="struct_camera_info_1abbb53648ae151fa253a9e3d9ddacdb66" kindref="member">cameraId</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;5MP_2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SENSOR_5MP_1:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraIdx<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SENSOR_3MP_1:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SENSOR_3MP_2:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraIdx<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1aa89ea2811484145ee10ba2031df8a20d" kindref="member">myCameraInfo</ref><sp/>=<sp/>*CameraType[cameraIdx];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>camera-&gt;currentPixelFormat<sp/>=<sp/>cameraDefaultInfo[cameraIdx]-&gt;cameraDefaultFormat;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>camera-&gt;currentPictureMode<sp/>=<sp/>cameraDefaultInfo[cameraIdx]-&gt;cameraDefaultResolution;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraBegin(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>cpld<sp/>and<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_SENSOR_RESET,<sp/>CAM_SENSOR_RESET_ENABLE);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>cameraGetSensorConfig(camera);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>updateCameraInfo(camera);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a226aa1272f49d9590defa89c68a051e2" kindref="member">verDateAndNumber</ref>[0]<sp/>=<sp/>readReg(camera,<sp/>CAM_REG_YEAR_ID)<sp/>&amp;<sp/>0x3F;<sp/></highlight><highlight class="comment">//<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;year:<sp/>%d\n&quot;,<sp/>camera-&gt;verDateAndNumber[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a226aa1272f49d9590defa89c68a051e2" kindref="member">verDateAndNumber</ref>[1]<sp/>=<sp/>readReg(camera,<sp/>CAM_REG_MONTH_ID)<sp/>&amp;<sp/>0x0F;<sp/></highlight><highlight class="comment">//<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;month:<sp/>%d\n&quot;,<sp/>camera-&gt;verDateAndNumber[1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a226aa1272f49d9590defa89c68a051e2" kindref="member">verDateAndNumber</ref>[2]<sp/>=<sp/>readReg(camera,<sp/>CAM_REG_DAY_ID)<sp/>&amp;<sp/>0x1F;<sp/></highlight><highlight class="comment">//<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;day:<sp/>%d\n&quot;,<sp/>camera-&gt;verDateAndNumber[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a226aa1272f49d9590defa89c68a051e2" kindref="member">verDateAndNumber</ref>[3]<sp/>=<sp/>readReg(camera,<sp/>CAM_REG_FPGA_VERSION_NUMBER)<sp/>&amp;<sp/>0xFF;<sp/></highlight><highlight class="comment">//<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;fpga<sp/>version:<sp/>%d\n&quot;,<sp/>camera-&gt;verDateAndNumber[3]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_DEVICE_ADDRESS,<sp/>camera-&gt;<ref refid="struct_arducam_camera_1aa89ea2811484145ee10ba2031df8a20d" kindref="member">myCameraInfo</ref>.deviceAddress);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraSetCapture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flushFifo(camera);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>clearFifoFlag(camera);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>startCapture(camera);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getBit(camera,<sp/>ARDUCHIP_TRIG,<sp/>CAP_DONE_MASK)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref><sp/>=<sp/>readFifoLength(camera);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1ae26950accff916b57616a84d53ebdd7b" kindref="member">totalLength</ref><sp/>=<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a3dd40388c20343fb13f2ae1b01da94e8" kindref="member">burstFirstFlag</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">uint32_t<sp/>cameraImageAvailable(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref>;<sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoFocus(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_AUTO_FOCUS_CONTROL,<sp/>val);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>focus<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">uint8_t<sp/>cameraGetAutoFocusSta(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>sta_reg<sp/>=<sp/>0x3029;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>1<sp/>write<sp/>sta_reg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>register_high<sp/>=<sp/>(sta_reg<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>register_low<sp/>=<sp/>(sta_reg)&amp;0xFF;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>register_high);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>register_low);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>2<sp/><sp/>read<sp/>real<sp/>sensor<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_SENSOR_RESET,<sp/>CAM_I2C_READ_MODE);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(camera);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamDelayMs(5);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>read<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>3<sp/><sp/>get<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readReg(camera,<sp/>SENSOR_DATA);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetManualFocus(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint16_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>vcm_reg_H<sp/>=<sp/>0x3603;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>vcm_reg_L<sp/>=<sp/>0x3602;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>register_high,<sp/>register_low;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>1<sp/>convert<sp/>val<sp/>to<sp/>vcm<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>code_9_4<sp/>=<sp/>(val<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>code_3_0<sp/>=<sp/>(val<sp/>&lt;&lt;<sp/>4)<sp/>&amp;<sp/>0xF0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>2<sp/>wirte<sp/>high<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>register_high<sp/>=<sp/>(vcm_reg_H<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>register_low<sp/>=<sp/>(vcm_reg_H)&amp;0xFF;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>register_high);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>register_low);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>code_9_4);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>3<sp/>wirte<sp/>low<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>register_high<sp/>=<sp/>(vcm_reg_L<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>register_low<sp/>=<sp/>(vcm_reg_L)&amp;0xFF;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>register_high);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>register_low);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>code_3_0);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></highlight></codeline>
<codeline lineno="337"><highlight class="normal">cameraTakePicture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref><sp/>mode,<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref><sp/>pixel_format)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a00deab096c8a215134965b30cc035946" kindref="member">currentPixelFormat</ref><sp/>!=<sp/>pixel_format)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a00deab096c8a215134965b30cc035946" kindref="member">currentPixelFormat</ref><sp/>=<sp/>pixel_format;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_FORMAT,<sp/>pixel_format);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>data<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1ae16629c42644ebe55b8609a1b9f00bcb" kindref="member">currentPictureMode</ref><sp/>!=<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1ae16629c42644ebe55b8609a1b9f00bcb" kindref="member">currentPictureMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_CAPTURE_RESOLUTION,<sp/>CAM_SET_CAPTURE_MODE<sp/>|<sp/>mode);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>setCapture(camera);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameratakeMultiPictures(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref><sp/>mode,<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref><sp/>pixel_format,<sp/>uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a00deab096c8a215134965b30cc035946" kindref="member">currentPixelFormat</ref><sp/>!=<sp/>pixel_format)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a00deab096c8a215134965b30cc035946" kindref="member">currentPixelFormat</ref><sp/>=<sp/>pixel_format;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_FORMAT,<sp/>pixel_format);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>data<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1ae16629c42644ebe55b8609a1b9f00bcb" kindref="member">currentPictureMode</ref><sp/>!=<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1ae16629c42644ebe55b8609a1b9f00bcb" kindref="member">currentPictureMode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_CAPTURE_RESOLUTION,<sp/>CAM_SET_CAPTURE_MODE<sp/>|<sp/>mode);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>CAPRURE_MAX_NUM)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>CAPRURE_MAX_NUM;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>ARDUCHIP_FRAMES,<sp/>num);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>setCapture(camera);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraRegisterCallback(</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a81b801c80862c07bcbe65126db52164c" kindref="member">BUFFER_CALLBACK</ref><sp/>function,<sp/>uint8_t<sp/>size,<sp/><ref refid="_arducam_camera_8h_1a62e2db4d727221e48961f73381929d90" kindref="member">STOP_HANDLE</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1acffc4cff7d9305f4dc20505b0cf74d30" kindref="member">callBackFunction</ref><sp/>=<sp/>function;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a1fd4f387d42fafa53f751f2d3a50e82c" kindref="member">blockSize</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;handle<sp/>=<sp/>handle;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraStartPreview(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a79f9eea25f8ca9df7e0773ab408baed7" kindref="member">CAM_VIDEO_MODE</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>camera-&gt;cameraDataFormat<sp/>=<sp/>CAM_IMAGE_PIX_FMT_JPG;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a931008407bcc8aaff983cca3df6eda07" kindref="member">previewMode</ref><sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!camera-&gt;<ref refid="struct_arducam_camera_1acffc4cff7d9305f4dc20505b0cf74d30" kindref="member">callBackFunction</ref>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1a667dfc004f98c4948c41661580a45a28" kindref="member">CAM_ERR_NO_CALLBACK</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_FORMAT,<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/><sp/>jpeg<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_CAPTURE_RESOLUTION,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAM_SET_VIDEO_MODE<sp/>|<sp/>mode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/><sp/>video<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>setCapture(camera);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>callBackBuff[PREVIEW_BUF_LEN];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraCaptureThread(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a931008407bcc8aaff983cca3df6eda07" kindref="member">previewMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>callBackLength<sp/>=<sp/><ref refid="_arducam_camera_8h_1a9d60fef97df95dbf41ee0389ada70df6" kindref="member">readBuff</ref>(camera,<sp/>callBackBuff,<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a1fd4f387d42fafa53f751f2d3a50e82c" kindref="member">blockSize</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callBackLength<sp/>!=<sp/>FALSE)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1acffc4cff7d9305f4dc20505b0cf74d30" kindref="member">callBackFunction</ref>(callBackBuff,<sp/>callBackLength);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCapture(camera);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraStopPreview(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a931008407bcc8aaff983cca3df6eda07" kindref="member">previewMode</ref><sp/>==<sp/>TRUE<sp/>&amp;&amp;<sp/>camera-&gt;handle<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;handle();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a00deab096c8a215134965b30cc035946" kindref="member">currentPixelFormat</ref><sp/>=<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1ae16629c42644ebe55b8609a1b9f00bcb" kindref="member">currentPictureMode</ref><sp/>=<sp/><ref refid="_arducam_camera_8h_1aad9c52a28f327c5d815f76befe687015a7491cfab5664b60bfafa41bf26e59a5f" kindref="member">CAM_IMAGE_MODE_QVGA</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a931008407bcc8aaff983cca3df6eda07" kindref="member">previewMode</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1ae26950accff916b57616a84d53ebdd7b" kindref="member">totalLength</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_FORMAT,<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/><sp/>jpeg<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetImageQuality(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>IMAGE_QUALITY<sp/>qualtiy)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_IMAGE_QUALITY,<sp/>qualtiy);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraReset(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_SENSOR_RESET,<sp/>CAM_SENSOR_RESET_ENABLE);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a00deab096c8a215134965b30cc035946" kindref="member">currentPixelFormat</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1ae16629c42644ebe55b8609a1b9f00bcb" kindref="member">currentPictureMode</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoWhiteBalanceMode(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a643d0ad26131376e247aab82485e0095" kindref="member">CAM_WHITE_BALANCE</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_WHILEBALANCE_MODE_CONTROL,<sp/>mode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Light<sp/>Mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoWhiteBalance(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>TRUE)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>SET_WHILEBALANCE;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>white<sp/>balance<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoISOSensitive(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>TRUE)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>SET_GAIN;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>gain<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetISOSensitivity(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iso_sense)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>==<sp/>SENSOR_3MP_1)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iso_sense<sp/>=<sp/>ov3640GainValue[iso_sense<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_MANUAL_GAIN_BIT_9_8,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iso_sense<sp/>&gt;&gt;<sp/>8);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>AGC<sp/>VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_MANUAL_GAIN_BIT_7_0,<sp/>iso_sense<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoExposure(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>TRUE)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>SET_EXPOSURE;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>EXPOSURE<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAbsoluteExposure(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint32_t<sp/>exposure_time)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>exposure<sp/>output<sp/>[19:16]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_19_16,<sp/>(uint8_t)((exposure_time<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>exposure<sp/>output<sp/>[15:8]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_15_8,<sp/>(uint8_t)((exposure_time<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>exposure<sp/>output<sp/>[7:0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_7_0,<sp/>(uint8_t)(exposure_time<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetColorEffect(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a1396f1daef6526339ee8abe10a55c375" kindref="member">CAM_COLOR_FX</ref><sp/>effect)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_COLOR_EFFECT_CONTROL,<sp/>effect);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetSaturation(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1af8d3f3a4b053155fc03d27c1dd23c011" kindref="member">CAM_STAURATION_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_SATURATION_CONTROL,<sp/>level);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Saturation<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetEV(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1ab97c4e8f129e7b064def02a3e9e19aff" kindref="member">CAM_EV_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Exposure<sp/><sp/>Compensation<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_EV_CONTROL,<sp/>level);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetContrast(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a039dba5eae31265427b4829d0db59231" kindref="member">CAM_CONTRAST_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_CONTRAST_CONTROL,<sp/>level);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Contrast<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetSharpness(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1afe52c72b2eda519bcd2b9db8df0d13f7" kindref="member">CAM_SHARPNESS_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_SHARPNESS_CONTROL,<sp/>level);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Brightness<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetBrightness(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1adf950e5ae505c62fabb157a5385c2c71" kindref="member">CAM_BRIGHTNESS_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_BRIGHTNESS_CONTROL,<sp/>level);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Brightness<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>NS_TRY_ABORT(waitI2cIdle(camera),<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Wait<sp/>for<sp/>Idle<sp/>Failed&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraFlushFifo(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>writeReg(camera,<sp/>ARDUCHIP_FIFO_2,<sp/>FIFO_CLEAR_MASK);<sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraStartCapture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>writeReg(camera,<sp/>ARDUCHIP_FIFO,<sp/>FIFO_START_MASK);<sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraClearFifoFlag(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>ARDUCHIP_FIFO,<sp/>FIFO_CLEAR_ID_MASK);</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">uint32_t<sp/>cameraReadFifoLength(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>len1,<sp/>len2,<sp/>len3,<sp/>length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>len1<sp/>=<sp/>readReg(camera,<sp/>FIFO_SIZE1);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>len2<sp/>=<sp/>readReg(camera,<sp/>FIFO_SIZE2);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>len3<sp/>=<sp/>readReg(camera,<sp/>FIFO_SIZE3);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>((len3<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(len2<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>len1)<sp/>&amp;<sp/>0xffffff;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">uint8_t<sp/>cameraGetBit(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr,<sp/>uint8_t<sp/>bit)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>readReg(camera,<sp/>addr);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp<sp/>&amp;<sp/>bit;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraSetFifoBurst(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiTransfer(BURST_FIFO_READ);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">uint8_t<sp/>cameraReadByte(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data<sp/>=<sp/>cameraReadReg(camera,<sp/>SINGLE_FIFO_READ);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiCsPinLow(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiTransfer(SINGLE_FIFO_READ);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiTransfer(0x00);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>=<sp/>arducamSpiTransfer(0x00);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiCsPinHigh(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">uint32_t<sp/>cameraReadBuff(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>*buff,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imageAvailable(camera)<sp/>==<sp/>0<sp/>||<sp/>(length<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref><sp/>&lt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Read<sp/>block<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>arducam_spi_read(buff,<sp/>length,<sp/>BURST_FIFO_READ,<sp/>1,<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>setFifoBurst(camera);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a3dd40388c20343fb13f2ae1b01da94e8" kindref="member">burstFirstFlag</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a3dd40388c20343fb13f2ae1b01da94e8" kindref="member">burstFirstFlag</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiTransfer(0x00);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifndef<sp/>arducamSpiReadBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(uint32_t<sp/>count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/>length;<sp/>count++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff[count]<sp/>=<sp/>arducamSpiTransfer(0x00);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>arducamSpiReadBlock(buff,<sp/>length);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>arducamSpiCsPinHigh(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a76dfe5e55658033342b10788d50fbf34" kindref="member">receivedLength</ref><sp/>-=<sp/>length;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraWriteReg(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>busWrite(camera,<sp/>addr<sp/>|<sp/>0x80,<sp/>val);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">uint8_t<sp/>cameraReadReg(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>busRead(camera,<sp/>addr<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;addr<sp/>%d<sp/>data:<sp/>%d\n&quot;,<sp/>addr,<sp/>data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal">uint8_t<sp/>cameraBusWrite(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiCsPinLow(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiTransfer(address);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiTransfer(value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiCsPinHigh(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>arducam_spi_write(&amp;value,<sp/>1,<sp/>address,<sp/>1,<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamDelayMs(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraCsHigh(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>arducamSpiCsPinHigh(camera-&gt;<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref>);<sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraCsLow(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>arducamSpiCsPinLow(camera-&gt;<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref>);<sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">uint8_t<sp/>cameraBusRead(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>value[2]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>long_address<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>arducam_spi_read(value,<sp/>2,<sp/>long_address,<sp/>1,<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiCsPinLow(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiTransfer(address);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>=<sp/>arducamSpiTransfer(0x00);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>=<sp/>arducamSpiTransfer(0x00);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arducamSpiCsPinHigh(camera-&gt;csPin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value[1];</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">uint32_t<sp/>cameraWaitI2cIdle(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>count<sp/>=<sp/>NS_CAMERA_MAX_WAIT;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((readReg(camera,<sp/>CAM_REG_SENSOR_STATE)<sp/>&amp;<sp/>0X03)<sp/>!=<sp/>CAM_REG_SENSOR_STATE_IDLE)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arducamDelayMs(2);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count--;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_STATUS_FAILURE;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">uint8_t<sp/><ref refid="_arducam_camera_8h_1ae25eeb15a766113eb9845e580debf2bf" kindref="member">cameraHeartBeat</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(readReg(camera,<sp/>CAM_REG_SENSOR_STATE)<sp/>&amp;<sp/>0X03)<sp/>==<sp/>CAM_REG_SENSOR_STATE_IDLE;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraDebugWriteRegister(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>*buff)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>register_high<sp/>=<sp/>buff[0];</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>register_low<sp/>=<sp/>buff[1];</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>value<sp/>=<sp/>buff[2];</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>register_high);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>register_low);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>value);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraLowPowerOn(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>==<sp/>SENSOR_5MP_2)<sp/>||<sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>==<sp/>SENSOR_3MP_2))<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg1<sp/>=<sp/>0x0028;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>data1<sp/>=<sp/>0xD000;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg2<sp/>=<sp/>0x002A;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>data2<sp/>=<sp/>0x107E;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg3<sp/>=<sp/>0x0F12;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>data3<sp/>=<sp/>0x0001;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>(reg1<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>(reg1)&amp;0xFF);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE_H,<sp/>(data1<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>(data1)&amp;0xFF);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>(reg2<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>(reg2)&amp;0xFF);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE_H,<sp/>(data2<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>(data2)&amp;0xFF);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>(reg3<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>(reg3)&amp;0xFF);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE_H,<sp/>(data3<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>(data3)&amp;0xFF);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_POWER_CONTROL,<sp/>0X07);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraLowPowerOff(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>==<sp/>SENSOR_5MP_2)<sp/>||<sp/>(camera-&gt;<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>==<sp/>SENSOR_3MP_2))<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg1<sp/>=<sp/>0x0028;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>data1<sp/>=<sp/>0xD000;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg2<sp/>=<sp/>0x002A;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>data2<sp/>=<sp/>0x107E;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg3<sp/>=<sp/>0x0F12;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>data3<sp/>=<sp/>0x0000;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>(reg1<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>(reg1)&amp;0xFF);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE_H,<sp/>(data1<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>(data1)&amp;0xFF);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>(reg2<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>(reg2)&amp;0xFF);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE_H,<sp/>(data2<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>(data2)&amp;0xFF);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_HIGH,<sp/>(reg3<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_LOW,<sp/>(reg3)&amp;0xFF);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE_H,<sp/>(data3<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_DEBUG_REGISTER_VALUE,<sp/>(data3)&amp;0xFF);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(camera);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(camera,<sp/>CAM_REG_POWER_CONTROL,<sp/>0X05);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1aab0ec3f42d97b07dc48e583f321d2725" kindref="member">reset</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;reset(camera);<sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1abb99665a6210474dbc5485efe40e569c" kindref="member">begin</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;begin(camera);<sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1ada9dc5817837f7cc41fdeece2aef7ede" kindref="member">takePicture</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref><sp/>mode,<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref><sp/>pixel_format)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;takePicture(camera,<sp/>mode,<sp/>pixel_format);</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1ac6035b7faf84afc745ad232df945f33a" kindref="member">takeMultiPictures</ref>(</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref><sp/>mode,<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref><sp/>pixel_format,<sp/>uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;takeMultiPictures(camera,<sp/>mode,<sp/>pixel_format,<sp/>num);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1aee5a9ed5de4b2eafa1e2a3ccc10057a6" kindref="member">startPreview</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a79f9eea25f8ca9df7e0773ab408baed7" kindref="member">CAM_VIDEO_MODE</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;startPreview(camera,<sp/>mode);</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>captureThread(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;captureThread(camera);<sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1ab4c6ef63c66d7cf3ea0414628a91f4ba" kindref="member">stopPreview</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;stopPreview(camera);</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a6a18126bfaa8cb8201817f4882d1aa1d" kindref="member">setAutoExposure</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setAutoExposure(camera,<sp/>val);</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1ada4560a5518a67e3c621cdefb4387290" kindref="member">setAbsoluteExposure</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint32_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setAbsoluteExposure(camera,<sp/>val);</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a294c22d8841eea04dcd9a906cab9e6d4" kindref="member">setAutoISOSensitive</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setAutoISOSensitive(camera,<sp/>val);</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1af6772ec6ede2f677d010110c5a816a83" kindref="member">setISOSensitivity</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iso_sense)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setISOSensitivity(camera,<sp/>iso_sense);</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1ab11ad5a5fec036451e88f4f23dbc1f16" kindref="member">setAutoWhiteBalance</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setAutoWhiteBalance(camera,<sp/>val);</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a8eb9dac524b4d55be9b908d9dd441d48" kindref="member">setAutoWhiteBalanceMode</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a643d0ad26131376e247aab82485e0095" kindref="member">CAM_WHITE_BALANCE</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setAutoWhiteBalanceMode(camera,<sp/>mode);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a3881f35aaa967bd603fb37b77dabd2b2" kindref="member">setColorEffect</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a1396f1daef6526339ee8abe10a55c375" kindref="member">CAM_COLOR_FX</ref><sp/>effect)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setColorEffect(camera,<sp/>effect);</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1aa81771289c1c9cd0a920bf459b8dfe44" kindref="member">setAutoFocus</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setAutoFocus(camera,<sp/>val);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal">uint8_t<sp/><ref refid="_arducam_camera_8h_1aa2cf1c832eacf3d3e5fe3dc7b2c3f163" kindref="member">getAutoFocusSta</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;getAutoFocusSta(camera);</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a715e25498b326200abc5df0beaa9bdd8" kindref="member">setManualFocus</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint16_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setManualFocus(camera,<sp/>val);</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a8124847ddb24c988de3b6fe8b7441fb3" kindref="member">setSaturation</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1af8d3f3a4b053155fc03d27c1dd23c011" kindref="member">CAM_STAURATION_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setSaturation(camera,<sp/>level);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a6c3e8ccf6bc773a48527ae7836d8ec74" kindref="member">setEV</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1ab97c4e8f129e7b064def02a3e9e19aff" kindref="member">CAM_EV_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setEV(camera,<sp/>level);</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a9ef34f613cc36d6ae790b205afc2c9da" kindref="member">setContrast</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a039dba5eae31265427b4829d0db59231" kindref="member">CAM_CONTRAST_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setContrast(camera,<sp/>level);</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1abb620c825fbbc7588830f6b1d21a3728" kindref="member">setBrightness</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1adf950e5ae505c62fabb157a5385c2c71" kindref="member">CAM_BRIGHTNESS_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setBrightness(camera,<sp/>level);</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a77e47dca0e36596a322c8d2e429f3c3e" kindref="member">setSharpness</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1afe52c72b2eda519bcd2b9db8df0d13f7" kindref="member">CAM_SHARPNESS_LEVEL</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setSharpness(camera,<sp/>level);</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal">uint32_t<sp/><ref refid="_arducam_camera_8h_1a9d60fef97df95dbf41ee0389ada70df6" kindref="member">readBuff</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>*buff,<sp/>uint32_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;readBuff(camera,<sp/>buff,<sp/>length);</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">uint8_t<sp/><ref refid="_arducam_camera_8h_1aaed9f105d4647e4e61e65672a601d4ae" kindref="member">readByte</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;readByte(camera);<sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a5055aa3e4cae6192acd2a790bed9a74b" kindref="member">debugWriteRegister</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>*buff)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;debugWriteRegister(camera,<sp/>buff);</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1aa972d150679abe157c3ec47dcb969a1b" kindref="member">registerCallback</ref>(</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/><ref refid="_arducam_camera_8h_1a81b801c80862c07bcbe65126db52164c" kindref="member">BUFFER_CALLBACK</ref><sp/>function,<sp/>uint8_t<sp/>blockSize,<sp/><ref refid="_arducam_camera_8h_1a62e2db4d727221e48961f73381929d90" kindref="member">STOP_HANDLE</ref><sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;registerCallback(camera,<sp/>function,<sp/>blockSize,<sp/>handle);</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a75a500a4f397c2a4024995404f0c4bb7" kindref="member">lowPowerOn</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;lowPowerOn(camera);<sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_arducam_camera_8h_1a41c4d1ac086eda32a95bd3d64568dd73" kindref="member">lowPowerOff</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;lowPowerOff(camera);<sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csHigh(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;csHigh(camera);<sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csLow(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;csLow(camera);<sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeReg(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr,<sp/>uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;writeReg(camera,<sp/>addr,<sp/>val);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">uint8_t<sp/>readReg(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;readReg(camera,<sp/>addr);</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal">uint8_t<sp/>busRead(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;busRead(camera,<sp/>address);</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal">uint8_t<sp/>busWrite(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;busWrite(camera,<sp/>address,<sp/>value);</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startCapture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;startCapture(camera);<sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearFifoFlag(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;clearFifoFlag(camera);<sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal">uint32_t<sp/>readFifoLength(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;readFifoLength(camera);</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal">uint8_t<sp/>getBit(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>uint8_t<sp/>addr,<sp/>uint8_t<sp/>bit)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;getBit(camera,<sp/>addr,<sp/>bit);</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFifoBurst(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setFifoBurst(camera);<sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCapture(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setCapture(camera);<sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal">uint32_t<sp/>waitI2cIdle(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;waitI2cIdle(camera);<sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal">uint32_t<sp/>imageAvailable(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;imageAvailable(camera);</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flushFifo(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera)<sp/>{<sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;flushFifo(camera);<sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><ref refid="_arducam_camera_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="_arducam_camera_8h_1a222408116724159b43b83d0f9d84e1a9" kindref="member">setImageQuality</ref>(<ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>*camera,<sp/>IMAGE_QUALITY<sp/>qualtiy)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera-&gt;<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref>-&gt;setImageQuality(camera,<sp/>qualtiy);</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CameraOperations<sp/>ArducamcameraOperations<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>.reset<sp/>=<sp/>cameraReset,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>.begin<sp/>=<sp/>cameraBegin,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>.takePicture<sp/>=<sp/>cameraTakePicture,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>.takeMultiPictures<sp/>=<sp/>cameratakeMultiPictures,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>.startPreview<sp/>=<sp/>cameraStartPreview,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>.captureThread<sp/>=<sp/>cameraCaptureThread,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>.stopPreview<sp/>=<sp/>cameraStopPreview,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoExposure<sp/>=<sp/>cameraSetAutoExposure,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAbsoluteExposure<sp/>=<sp/>cameraSetAbsoluteExposure,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoISOSensitive<sp/>=<sp/>cameraSetAutoISOSensitive,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>.setISOSensitivity<sp/>=<sp/>cameraSetISOSensitivity,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoWhiteBalance<sp/>=<sp/>cameraSetAutoWhiteBalance,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoWhiteBalanceMode<sp/>=<sp/>cameraSetAutoWhiteBalanceMode,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>.setColorEffect<sp/>=<sp/>cameraSetColorEffect,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoFocus<sp/>=<sp/>cameraSetAutoFocus,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>.getAutoFocusSta<sp/>=<sp/>cameraGetAutoFocusSta,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>.setManualFocus<sp/>=<sp/>cameraSetManualFocus,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>.setSaturation<sp/>=<sp/>cameraSetSaturation,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>.setEV<sp/>=<sp/>cameraSetEV,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>.setContrast<sp/>=<sp/>cameraSetContrast,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>.setBrightness<sp/>=<sp/>cameraSetBrightness,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>.setSharpness<sp/>=<sp/>cameraSetSharpness,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>.registerCallback<sp/>=<sp/>cameraRegisterCallback,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>.imageAvailable<sp/>=<sp/>cameraImageAvailable,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>.csHigh<sp/>=<sp/>cameraCsHigh,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>.csLow<sp/>=<sp/>cameraCsLow,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>.readBuff<sp/>=<sp/>cameraReadBuff,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>.readByte<sp/>=<sp/>cameraReadByte,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>.debugWriteRegister<sp/>=<sp/>cameraDebugWriteRegister,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>.writeReg<sp/>=<sp/>cameraWriteReg,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>.readReg<sp/>=<sp/>cameraReadReg,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>.busRead<sp/>=<sp/>cameraBusRead,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>.busWrite<sp/>=<sp/>cameraBusWrite,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>.flushFifo<sp/>=<sp/>cameraFlushFifo,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>.startCapture<sp/>=<sp/>cameraStartCapture,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>.clearFifoFlag<sp/>=<sp/>cameraClearFifoFlag,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>.readFifoLength<sp/>=<sp/>cameraReadFifoLength,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>.getBit<sp/>=<sp/>cameraGetBit,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>.setFifoBurst<sp/>=<sp/>cameraSetFifoBurst,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>.setCapture<sp/>=<sp/>cameraSetCapture,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>.waitI2cIdle<sp/>=<sp/>cameraWaitI2cIdle,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>.lowPowerOn<sp/>=<sp/>cameraLowPowerOn,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>.lowPowerOff<sp/>=<sp/>cameraLowPowerOff,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>.setImageQuality<sp/>=<sp/>cameraSetImageQuality,</highlight></codeline>
<codeline lineno="938"><highlight class="normal">};</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/>camera;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><ref refid="struct_arducam_camera" kindref="compound">ArducamCamera</ref><sp/><ref refid="_arducam_camera_8h_1ada4a7f048d83ba0fe3a3c01f2588f6dd" kindref="member">createArducamCamera</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CS)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ArducamCamera<sp/>camera;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraType[0]<sp/>=<sp/>&amp;CameraInfo_5MP;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraType[1]<sp/>=<sp/>&amp;CameraInfo_3MP;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cameraDefaultInfo[0]<sp/>=<sp/>&amp;DefaultState_5mp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cameraDefaultInfo[1]<sp/>=<sp/>&amp;DefaultState_3mp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1a566bba6b4f9ada59bb3fe9b82df37409" kindref="member">cameraId</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1a00deab096c8a215134965b30cc035946" kindref="member">currentPixelFormat</ref><sp/>=<sp/><ref refid="_arducam_camera_8h_1ae9748ceecc6f11421cb46fc489606338ad29ea6bdf677352692fedfaeec0ee750" kindref="member">CAM_IMAGE_PIX_FMT_NONE</ref>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1ae16629c42644ebe55b8609a1b9f00bcb" kindref="member">currentPictureMode</ref><sp/>=<sp/>CAM_IMAGE_MODE_NONE;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1a3dd40388c20343fb13f2ae1b01da94e8" kindref="member">burstFirstFlag</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1a931008407bcc8aaff983cca3df6eda07" kindref="member">previewMode</ref><sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1a7714744f53c9703a439bf8f4cc9d0662" kindref="member">csPin</ref><sp/>=<sp/>CS;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1a465a44b60f126c47c1a1e26f94f97475" kindref="member">arducamCameraOp</ref><sp/>=<sp/>&amp;ArducamcameraOperations;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>camera.<ref refid="struct_arducam_camera_1aabf74b64b44ba01506afbb6013647d8e" kindref="member">currentSDK</ref><sp/>=<sp/>&amp;currentSDK;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>cameraInit(&amp;camera);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camera;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-camera/src/arducam/ArducamCamera.c"/>
  </compounddef>
</doxygen>
