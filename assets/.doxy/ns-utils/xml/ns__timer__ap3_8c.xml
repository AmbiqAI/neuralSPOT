<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ns__timer__ap3_8c" kind="file" language="C++">
    <compoundname>ns_timer_ap3.c</compoundname>
    <includes refid="ns__timer_8h" local="yes">ns_timer.h</includes>
    <includes local="yes">am_bsp.h</includes>
    <includes local="yes">am_mcu_apollo.h</includes>
    <includes local="yes">am_util.h</includes>
    <includes local="yes">ns_core.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ns_timer.h</label>
        <link refid="ns__timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c</label>
        <link refid="ns__timer__ap3_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>am_bsp.h</label>
      </node>
      <node id="4">
        <label>am_mcu_apollo.h</label>
      </node>
      <node id="5">
        <label>am_util.h</label>
      </node>
      <node id="6">
        <label>ns_core.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="ns__timer__ap3_8c_1aedbcd1819f17194ff1270ace572a9d87" prot="public" static="no">
        <name>AP3_CTIMER_FREQ_IN_MHZ</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="55" column="9" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ns__timer__ap3_8c_1a908f17a703e458493dcfedb6eb7e31d2" prot="public" static="no" mutable="no">
        <type><ref refid="group__ns-timer_1ga984d6838242919650f525f5210550a5e" kindref="member">ns_timer_config_t</ref> *</type>
        <definition>ns_timer_config_t* ns_timer_config[NS_TIMER_TEMPCO+1]</definition>
        <argsstring>[NS_TIMER_TEMPCO+1]</argsstring>
        <name>ns_timer_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="18" column="26" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_timer.c" bodystart="28" bodyend="-1" declfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" declline="18" declcolumn="26"/>
      </memberdef>
      <memberdef kind="variable" id="ns__timer__ap3_8c_1a49e6958e534502a46887e809694f9c76" prot="public" static="yes" mutable="no">
        <type>am_hal_ctimer_config_t</type>
        <definition>am_hal_ctimer_config_t g_sTimer</definition>
        <argsstring></argsstring>
        <name>g_sTimer</name>
        <initializer>= {
    
    1,

    
    (AM_HAL_CTIMER_FN_REPEAT | AM_HAL_CTIMER_INT_ENABLE | AM_HAL_CTIMER_HFRC_12MHZ),

    
    0,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="44" column="31" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ns__timer__ap3_8c_1aade3444ba208657bb2a9b699a9735ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer0_handler</definition>
        <argsstring>(void)</argsstring>
        <name>timer0_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="20" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="ns__timer__ap3_8c_1a911351e140c152fde410490502f5e252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer1_handler</definition>
        <argsstring>(void)</argsstring>
        <name>timer1_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="26" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="ns__timer__ap3_8c_1a0e61cbb390600be460092c47d63f002f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer2_handler</definition>
        <argsstring>(void)</argsstring>
        <name>timer2_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="32" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="ns__timer__ap3_8c_1aed8daf6d21bcdda93b16d0da84e286fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer3_handler</definition>
        <argsstring>(void)</argsstring>
        <name>timer3_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="38" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="ns__timer__ap3_8c_1a13f9ad21010e7abfde293020e2cf49c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void am_ctimer_isr</definition>
        <argsstring>(void)</argsstring>
        <name>am_ctimer_isr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="58" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="ns__timer__ap3_8c_1a5408d02d4399e350874694b6142345c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_timer_platform_init</definition>
        <argsstring>(ns_timer_config_t *cfg)</argsstring>
        <name>ns_timer_platform_init</name>
        <param>
          <type><ref refid="group__ns-timer_1ga984d6838242919650f525f5210550a5e" kindref="member">ns_timer_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="66" column="10" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="66" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-timer_1gae2d6df247f6a4cca523f714bf9f8fc62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_us_ticker_read</definition>
        <argsstring>(ns_timer_config_t *cfg)</argsstring>
        <name>ns_us_ticker_read</name>
        <param>
          <type><ref refid="group__ns-timer_1ga984d6838242919650f525f5210550a5e" kindref="member">ns_timer_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Read current value of timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t timer if success, 0xDEADBEEF if bad handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="106" column="10" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="106" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-timer_1gad88c0ffad661f8dc90107f6f3eced888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_timer_clear</definition>
        <argsstring>(ns_timer_config_t *cfg)</argsstring>
        <name>ns_timer_clear</name>
        <param>
          <type><ref refid="group__ns-timer_1ga984d6838242919650f525f5210550a5e" kindref="member">ns_timer_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Clear timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" line="115" column="10" bodyfile="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c" bodystart="115" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ns__timer_8h" kindref="compound">ns_timer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;am_bsp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;am_mcu_apollo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;am_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structns__timer__config" kindref="compound">ns_timer_config_t</ref><sp/>*<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[<ref refid="group__ns-timer_1gga23c4e7e5ef06a4ec8992b4ef2e29a7fea6d4cd93370d10028473486e7c5644b48" kindref="member">NS_TIMER_TEMPCO</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timer0_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[0]-&gt;enableInterrupt)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[0]-&gt;<ref refid="structns__timer__config_1a790ddda62f30e2be50c04d40a4b819fa" kindref="member">callback</ref>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[0]);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timer1_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[1]-&gt;enableInterrupt)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[1]-&gt;<ref refid="structns__timer__config_1a790ddda62f30e2be50c04d40a4b819fa" kindref="member">callback</ref>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[1]);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timer2_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[2]-&gt;enableInterrupt)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[2]-&gt;<ref refid="structns__timer__config_1a790ddda62f30e2be50c04d40a4b819fa" kindref="member">callback</ref>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[2]);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timer3_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[3]-&gt;enableInterrupt)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[3]-&gt;<ref refid="structns__timer__config_1a790ddda62f30e2be50c04d40a4b819fa" kindref="member">callback</ref>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config</ref>[3]);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>am_hal_ctimer_config_t<sp/>g_sTimer<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>link<sp/>timers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>TimerA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>(AM_HAL_CTIMER_FN_REPEAT<sp/>|<sp/>AM_HAL_CTIMER_INT_ENABLE<sp/>|<sp/>AM_HAL_CTIMER_HFRC_12MHZ),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>configuration<sp/>for<sp/>TimerB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AP3_CTIMER_FREQ_IN_MHZ<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Timer<sp/>Interrupt<sp/>Service<sp/>Routine<sp/>(ISR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>am_ctimer_isr(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ui32Status;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ui32Status<sp/>=<sp/>am_hal_ctimer_int_status_get(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_ctimer_int_clear(ui32Status);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_ctimer_int_service(ui32Status);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">uint32_t<sp/>ns_timer_platform_init(<ref refid="structns__timer__config" kindref="compound">ns_timer_config_t</ref><sp/>*cfg)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ui32Period<sp/>=<sp/>cfg-&gt;<ref refid="structns__timer__config_1a6bd38e927ea9f02a11917a36f87fae58" kindref="member">periodInMicroseconds</ref><sp/>*<sp/>AP3_CTIMER_FREQ_IN_MHZ;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timer<sp/>0<sp/>int<sp/>is<sp/>0x01<sp/>0000_0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timer<sp/>1<sp/>int<sp/>is<sp/>0x04<sp/>0000_0100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timer<sp/>2<sp/>int<sp/>is<sp/>0x10<sp/>0001_0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timer<sp/>3<sp/>int<sp/>is<sp/>0x40<sp/>0100_0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ui32IntMask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_ctimer_clear(cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref>,<sp/>AM_HAL_CTIMER_BOTH);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_ctimer_config(cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref>,<sp/>&amp;g_sTimer);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg-&gt;<ref refid="structns__timer__config_1ac0d210b076485fbdf1ca7a0f177d27e1" kindref="member">enableInterrupt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_ctimer_period_set(cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref>,<sp/>AM_HAL_CTIMER_BOTH,<sp/>ui32Period,<sp/>(ui32Period<sp/>&gt;&gt;<sp/>1));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_ctimer_int_clear(ui32IntMask);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg-&gt;<ref refid="structns__timer__config_1ac0d210b076485fbdf1ca7a0f177d27e1" kindref="member">enableInterrupt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_ctimer_int_register(ui32IntMask,<sp/>timer0_handler);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_ctimer_int_register(ui32IntMask,<sp/>timer1_handler);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_ctimer_int_register(ui32IntMask,<sp/>timer2_handler);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_ctimer_int_register(ui32IntMask,<sp/>timer3_handler);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_ctimer_int_enable(ui32IntMask);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NVIC_EnableIRQ(CTIMER_IRQn);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_ctimer_start(cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref>,<sp/>AM_HAL_CTIMER_BOTH);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_interrupt_master_enable();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-timer_1gae2d6df247f6a4cca523f714bf9f8fc62" kindref="member">ns_us_ticker_read</ref>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config_t</ref><sp/>*cfg)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NS_DISABLE_API_VALIDATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0xDEADBEEF;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>am_hal_ctimer_read(cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref>,<sp/>AM_HAL_CTIMER_BOTH)<sp/>/<sp/>AP3_CTIMER_FREQ_IN_MHZ;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-timer_1gad88c0ffad661f8dc90107f6f3eced888" kindref="member">ns_timer_clear</ref>(<ref refid="structns__timer__config" kindref="compound">ns_timer_config_t</ref><sp/>*cfg)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NS_DISABLE_API_VALIDATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_STATUS_INVALID_HANDLE;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_ctimer_clear(cfg-&gt;<ref refid="structns__timer__config_1a116e5bfd735eeb5d4bc4de484cb580d1" kindref="member">timer</ref>,<sp/>AM_HAL_CTIMER_BOTH);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NS_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-utils/src/apollo3/ns_timer_ap3.c"/>
  </compounddef>
</doxygen>
