<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ns__audio__melspec_8h" kind="file" language="C++">
    <compoundname>ns_audio_melspec.h</compoundname>
    <includes local="yes">arm_math.h</includes>
    <includes refid="ns__audio__features__common_8h" local="yes">ns_audio_features_common.h</includes>
    <includedby refid="ns__melspec_8c" local="yes">neuralSPOT/neuralspot/ns-audio/src/ns_melspec.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>ns_audio_features_common.h</label>
        <link refid="ns__audio__features__common_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h</label>
        <link refid="ns__audio__melspec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>arm_math.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h</label>
        <link refid="ns__audio__melspec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>neuralSPOT/neuralspot/ns-audio/src/ns_melspec.c</label>
        <link refid="ns__melspec_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structns__melspec__cfg__t" prot="public">ns_melspec_cfg_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="ns__audio__melspec_8h_1a3fbaaf9dc7d96d066c5eb1c53997da28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_melspec_init</definition>
        <argsstring>(ns_melspec_cfg_t *c)</argsstring>
        <name>ns_melspec_init</name>
        <param>
          <type><ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>initialize data structures used for mel spectrogram related functions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" line="90" column="13" bodyfile="neuralSPOT/neuralspot/ns-audio/src/ns_melspec.c" bodystart="70" bodyend="84" declfile="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" declline="90" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ns__audio__melspec_8h_1a5a38362b3faa16b36abdee1084944390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_melspec_audio_to_stft</definition>
        <argsstring>(ns_melspec_cfg_t *c, const int16_t *audio_data, float32_t *stft_out)</argsstring>
        <name>ns_melspec_audio_to_stft</name>
        <param>
          <type><ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref> *</type>
          <declname>c</declname>
          <defname>cfg</defname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>audio_data</declname>
          <defname>audio_in</defname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>stft_out</declname>
        </param>
        <briefdescription>
<para>convert the audio samples into a short-time fourier transform </para>
        </briefdescription>
        <detaileddescription>
<para>Result is complex valued (containing magnitude and phase info in alternating 32-bit values, so stft_out should be 2*MELSPEC_FRAME_LEN </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" line="93" column="1" bodyfile="neuralSPOT/neuralspot/ns-audio/src/ns_melspec.c" bodystart="94" bodyend="105" declfile="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" declline="93" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="ns__audio__melspec_8h_1a9d8c67307afe71d7b6fe07170ce8f2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_melspec_stft_to_audio</definition>
        <argsstring>(ns_melspec_cfg_t *c, float32_t *stft_in, int16_t *audio_out)</argsstring>
        <name>ns_melspec_stft_to_audio</name>
        <param>
          <type><ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref> *</type>
          <declname>c</declname>
          <defname>cfg</defname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>stft_in</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>audio_out</declname>
        </param>
        <briefdescription>
<para>Inverts short-time fourier transform into a reconstructed audio sample. </para>
        </briefdescription>
        <detaileddescription>
<para>We assume the stft input is complex valued (containing magnitude and phase info in alternating 32-bit values).</para>
<para>Note that this operation currently modifies the input buffer! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" line="95" column="13" bodyfile="neuralSPOT/neuralspot/ns-audio/src/ns_melspec.c" bodystart="117" bodyend="126" declfile="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" declline="95" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ns__audio__melspec_8h_1a72b03e3b583a2a77bc707ae4736d747d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_melspec_stft_to_compressed_melspec</definition>
        <argsstring>(ns_melspec_cfg_t *c, const float32_t *stft_in, float32_t *melspec_out)</argsstring>
        <name>ns_melspec_stft_to_compressed_melspec</name>
        <param>
          <type><ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>stft_in</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>melspec_out</declname>
        </param>
        <briefdescription>
<para>Converts complex valued short-time fourier transform into real-valued, power compressed mel scaled space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" line="97" column="13" bodyfile="neuralSPOT/neuralspot/ns-audio/src/ns_melspec.c" bodystart="133" bodyend="145" declfile="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" declline="97" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="ns__audio__melspec_8h_1a78f4c9d88f6dfcfe79543f2311e16659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_melspec_melspec_to_stft</definition>
        <argsstring>(ns_melspec_cfg_t *c, const float32_t *melspec_in, float32_t *stft_out)</argsstring>
        <name>ns_melspec_melspec_to_stft</name>
        <param>
          <type><ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>melspec_in</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>stft_out</declname>
        </param>
        <briefdescription>
<para>Inverts a mel spectrogram back into linear short-time fourier transform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" line="101" column="1" bodyfile="neuralSPOT/neuralspot/ns-audio/src/ns_melspec.c" bodystart="151" bodyend="168" declfile="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h" declline="101" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2022,<sp/>Ambiq<sp/>Micro,<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Third<sp/>party<sp/>software<sp/>included<sp/>in<sp/>this<sp/>distribution<sp/>is<sp/>subject<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>additional<sp/>license<sp/>terms<sp/>as<sp/>defined<sp/>in<sp/>the<sp/>/docs/licenses<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__NS_AUDIO_MELSPEC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NS_AUDIO_MELSPEC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arm_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_audio_features_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structns__melspec__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*arena;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sample_frequency;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>num_fbank_bins;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>low_freq;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>high_freq;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>num_frames;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>frame_len;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>frame_len_pow2;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compression_exponent;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*melspecBuffer;<sp/></highlight><highlight class="comment">//[2<sp/>*<sp/>MELSPEC_FRAME_LEN];<sp/>//<sp/>interleaved<sp/>real<sp/>+<sp/>imaginary<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structns__fbanks__cfg__t" kindref="compound">ns_fbanks_cfg_t</ref><sp/>fbc;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/><ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arena<sp/>should<sp/>be<sp/>enough<sp/>to<sp/>accomodate<sp/>the<sp/>various<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>e.g.<sp/>MFCC_ARENA_SIZE<sp/><sp/>32*(MELSPEC_FRAME_LEN_POW2*2<sp/>+<sp/>MELSPEC_NUM_FBANK_BINS*52))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>&apos;32&apos;<sp/>is<sp/>size<sp/>of<sp/>float<sp/>and<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifndef<sp/>STFT_OVERRIDE_DEFAULTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_SAMP_FREQ<sp/>16000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_FRAME_LEN<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_FRAME_LEN_POW2<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_NUM_FRAMES<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_NUM_FBANK_BINS<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_MEL_LOW_FREQ<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_MEL_HIGH_FREQ<sp/>8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#define<sp/>MELSPEC_COMPRESSION_EXPONENT<sp/>0.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ns__melspec_8c_1a73bad025e11c5d4fc59051fc8976af52" kindref="member">ns_melspec_init</ref>(<ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref><sp/>*c);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="ns__melspec_8c_1a70cbfab6cfcb54f02dfd63c5c6d8e9f0" kindref="member">ns_melspec_audio_to_stft</ref>(<ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref><sp/>*c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>*audio_data,<sp/>float32_t<sp/>*stft_out);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ns__melspec_8c_1aed327ad928886a008cc8f924257767dd" kindref="member">ns_melspec_stft_to_audio</ref>(<ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref><sp/>*c,<sp/>float32_t<sp/>*stft_in,<sp/>int16_t<sp/>*audio_out);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ns__melspec_8c_1a09f0f20fa66b0e22c8ef28bed3a2939e" kindref="member">ns_melspec_stft_to_compressed_melspec</ref>(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref><sp/>*c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*stft_in,<sp/>float32_t<sp/>*melspec_out);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="ns__melspec_8c_1aa347329b64d90c9d76abffc23dc04170" kindref="member">ns_melspec_melspec_to_stft</ref>(<ref refid="structns__melspec__cfg__t" kindref="compound">ns_melspec_cfg_t</ref><sp/>*c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>*melspec_in,<sp/>float32_t<sp/>*stft_out);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-audio/includes-api/ns_audio_melspec.h"/>
  </compounddef>
</doxygen>
