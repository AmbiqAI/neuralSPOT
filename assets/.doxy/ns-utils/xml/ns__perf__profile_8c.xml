<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ns__perf__profile_8c" kind="file" language="C++">
    <compoundname>ns_perf_profile.c</compoundname>
    <includes refid="ns__perf__profile_8h" local="yes">ns_perf_profile.h</includes>
    <includes local="yes">ns_ambiqsuite_harness.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ns_perf_profile.h</label>
        <link refid="ns__perf__profile_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c</label>
        <link refid="ns__perf__profile_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>am_bsp.h</label>
      </node>
      <node id="4">
        <label>am_mcu_apollo.h</label>
      </node>
      <node id="5">
        <label>am_util.h</label>
      </node>
      <node id="6">
        <label>ns_ambiqsuite_harness.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ns-cache-profile_1gaebd986f35cd2960e270eb67d7eabbf0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t ns_cache_profiler_init</definition>
        <argsstring>(ns_cache_config_t *cfg)</argsstring>
        <name>ns_cache_profiler_init</name>
        <param>
          <type><ref refid="structns__cache__config__t" kindref="compound">ns_cache_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Enables the Cache profile counters. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize the cache profiler.</para>
<para>Enables cache performance counters (uses slightly more power)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="25" column="9" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1ga3d71e40ad288f91c8bf9c319d7a028f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_capture_cache_stats</definition>
        <argsstring>(ns_cache_dump_t *dump)</argsstring>
        <name>ns_capture_cache_stats</name>
        <param>
          <type><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref> *</type>
          <declname>dump</declname>
        </param>
        <briefdescription>
<para>Capture cache counters in &apos;dump&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture the current value of the cache performance counters in the provided struct.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dump</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="43" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="43" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1ga8de598c1400870868659453e3d08c08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_delta_cache</definition>
        <argsstring>(ns_cache_dump_t *s, ns_cache_dump_t *e, ns_cache_dump_t *d)</argsstring>
        <name>ns_delta_cache</name>
        <param>
          <type><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Capture the delta between two cache performance counter snapshots. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>start snapshot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>end snapshot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>struct where delta will be stored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="66" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1ga260f0984f5bbf10aa8c5591dc36b9e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_print_cache_stats</definition>
        <argsstring>(ns_cache_dump_t *dump)</argsstring>
        <name>ns_print_cache_stats</name>
        <param>
          <type><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref> *</type>
          <declname>dump</declname>
        </param>
        <briefdescription>
<para>Prints contents of captured &apos;dump&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>Print the cache performance counters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dump</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="82" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="82" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1gac76ffef4069b3a01dba19e7af22ba75b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_print_cache_stats_delta</definition>
        <argsstring>(ns_cache_dump_t *start, ns_cache_dump_t *end)</argsstring>
        <name>ns_print_cache_stats_delta</name>
        <param>
          <type><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref> *</type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Prints the difference between two captured dumps. </para>
        </briefdescription>
        <detaileddescription>
<para>Print the delta between two cache performance counter snapshots.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="99" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="99" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1ga7012775f3ad475e8d977b60766182a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_reset_perf_counters</definition>
        <argsstring>(void)</argsstring>
        <name>ns_reset_perf_counters</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Resets DWT counter register values. </para>
        </briefdescription>
        <detaileddescription>
<para>Reset the HW performance counters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="120" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="120" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1ga289ac76609da3ca33b9ce20d1be05218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_init_perf_profiler</definition>
        <argsstring>(void)</argsstring>
        <name>ns_init_perf_profiler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes DWT counters, does not enable counters. </para>
        </briefdescription>
        <detaileddescription>
<para>Configure the HW performance capture unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="134" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1gab4d63f1d9add998303ee63c64c47a48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_start_perf_profiler</definition>
        <argsstring>(void)</argsstring>
        <name>ns_start_perf_profiler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enables DWT counters. </para>
        </briefdescription>
        <detaileddescription>
<para>Start the HW performance capture unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="143" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1ga6ee9e1f3c1bec6055335583693339952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_stop_perf_profiler</definition>
        <argsstring>(void)</argsstring>
        <name>ns_stop_perf_profiler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disables DWT counters. </para>
        </briefdescription>
        <detaileddescription>
<para>Stop the HW performance capture unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="157" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1gac4431d0efc47f8b2c1fcf20f05c0f430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_capture_perf_profiler</definition>
        <argsstring>(ns_perf_counters_t *c)</argsstring>
        <name>ns_capture_perf_profiler</name>
        <param>
          <type><ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Captures DWT counter values into &apos;c&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>Capture the current value of the HW performance counters in the provided struct.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="164" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="164" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="ns__perf__profile_8c_1a283bde3e6c615ad150c98af9e0dae7c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ns_delta_byte_counter_wrap</definition>
        <argsstring>(uint32_t e, uint32_t s)</argsstring>
        <name>ns_delta_byte_counter_wrap</name>
        <param>
          <type>uint32_t</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="173" column="17" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1ga2e7ab288293bccc9914ee9e3e0235877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_delta_perf</definition>
        <argsstring>(ns_perf_counters_t *s, ns_perf_counters_t *e, ns_perf_counters_t *d)</argsstring>
        <name>ns_delta_perf</name>
        <param>
          <type><ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Calculate the delta between two HW performance snapshots. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>starting snapshot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>ending snapshot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Calculated delta </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="178" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="178" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-cache-profile_1gae1a66a1314758decfabc97b53c679d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_print_perf_profile</definition>
        <argsstring>(ns_perf_counters_t *c)</argsstring>
        <name>ns_print_perf_profile</name>
        <param>
          <type><ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Prints DWT counter values captured in &apos;c&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>Print a HW performance counter snapshot.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" line="192" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c" bodystart="192" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Collection of performance and power profiling utilities. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Carlos Morales </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2022-10-10</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#if<sp/>defined(AM_PART_APOLLO3)<sp/>||<sp/>defined(AM_PART_APOLLO3P)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/>AP3TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_perf_profile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_ambiqsuite_harness.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">uint8_t<sp/><ref refid="group__ns-cache-profile_1gaebd986f35cd2960e270eb67d7eabbf0c" kindref="member">ns_cache_profiler_init</ref>(<ref refid="structns__cache__config__t" kindref="compound">ns_cache_config_t</ref><sp/>*cfg)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>status<sp/>=<sp/>AM_HAL_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg-&gt;enable)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_cachectrl_control(AM_HAL_CACHECTRL_CONTROL_MONITOR_ENABLE,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;dummy);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>am_hal_cachectrl_control(AM_HAL_CACHECTRL_CONTROL_MONITOR_DISABLE,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;dummy);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1ga3d71e40ad288f91c8bf9c319d7a028f8" kindref="member">ns_capture_cache_stats</ref>(<ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref><sp/>*dump)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AM_PART_APOLLO3)<sp/>||<sp/>defined(AM_PART_APOLLO3P)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;daccess<sp/>=<sp/>CACHECTRL-&gt;DMON0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;dtaglookup<sp/>=<sp/>CACHECTRL-&gt;DMON1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;dhitslookup<sp/>=<sp/>CACHECTRL-&gt;DMON2;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;dhitsline<sp/>=<sp/>CACHECTRL-&gt;DMON3;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;iaccess<sp/>=<sp/>CACHECTRL-&gt;IMON0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;itaglookup<sp/>=<sp/>CACHECTRL-&gt;IMON1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;ihitslookup<sp/>=<sp/>CACHECTRL-&gt;IMON2;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;ihitsline<sp/>=<sp/>CACHECTRL-&gt;IMON3;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;daccess<sp/>=<sp/>CPU-&gt;DMON0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;dtaglookup<sp/>=<sp/>CPU-&gt;DMON1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;dhitslookup<sp/>=<sp/>CPU-&gt;DMON2;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;dhitsline<sp/>=<sp/>CPU-&gt;DMON3;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;iaccess<sp/>=<sp/>CPU-&gt;IMON0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;itaglookup<sp/>=<sp/>CPU-&gt;IMON1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;ihitslookup<sp/>=<sp/>CPU-&gt;IMON2;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>dump-&gt;ihitsline<sp/>=<sp/>CPU-&gt;IMON3;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1ga8de598c1400870868659453e3d08c08f" kindref="member">ns_delta_cache</ref>(<ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref><sp/>*s,<sp/><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref><sp/>*e,<sp/><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;daccess<sp/>=<sp/>e-&gt;daccess<sp/>-<sp/>s-&gt;daccess;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dtaglookup<sp/>=<sp/>e-&gt;dtaglookup<sp/>-<sp/>s-&gt;dtaglookup;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dhitslookup<sp/>=<sp/>e-&gt;dhitslookup<sp/>-<sp/>s-&gt;dhitslookup;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;dhitsline<sp/>=<sp/>e-&gt;dhitsline<sp/>-<sp/>s-&gt;dhitsline;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;iaccess<sp/>=<sp/>e-&gt;iaccess<sp/>-<sp/>s-&gt;iaccess;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;itaglookup<sp/>=<sp/>e-&gt;itaglookup<sp/>-<sp/>s-&gt;itaglookup;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;ihitslookup<sp/>=<sp/>e-&gt;ihitslookup<sp/>-<sp/>s-&gt;ihitslookup;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;ihitsline<sp/>=<sp/>e-&gt;ihitsline<sp/>-<sp/>s-&gt;ihitsline;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1ga260f0984f5bbf10aa8c5591dc36b9e69" kindref="member">ns_print_cache_stats</ref>(<ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref><sp/>*dump)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Dcache<sp/>Accesses<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;daccess);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Dcache<sp/>Tag<sp/>Lookups<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;dtaglookup);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Dcache<sp/>hits<sp/>for<sp/>lookups<sp/>:<sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;dhitslookup);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Dcache<sp/>hits<sp/>for<sp/>lines<sp/>:<sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;dhitsline);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Icache<sp/>Accesses<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;iaccess);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Icache<sp/>Tag<sp/>Lookups<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;itaglookup);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Icache<sp/>hits<sp/>for<sp/>lookups<sp/>:<sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;ihitslookup);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Icache<sp/>hits<sp/>for<sp/>lines<sp/>:<sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>dump-&gt;ihitsline);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1gac76ffef4069b3a01dba19e7af22ba75b" kindref="member">ns_print_cache_stats_delta</ref>(<ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref><sp/>*start,<sp/><ref refid="structns__cache__dump__t" kindref="compound">ns_cache_dump_t</ref><sp/>*end)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Dcache<sp/>Accesses<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;daccess<sp/>-<sp/>start-&gt;daccess);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Dcache<sp/>Tag<sp/>Lookups<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;dtaglookup<sp/>-<sp/>start-&gt;dtaglookup);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Dcache<sp/>hits<sp/>for<sp/>lookups<sp/>:<sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;dhitslookup<sp/>-<sp/>start-&gt;dhitslookup);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Dcache<sp/>hits<sp/>for<sp/>lines<sp/>:<sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;dhitsline<sp/>-<sp/>start-&gt;dhitsline);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Icache<sp/>Accesses<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;iaccess<sp/>-<sp/>start-&gt;iaccess);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Icache<sp/>Tag<sp/>Lookups<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;itaglookup<sp/>-<sp/>start-&gt;itaglookup);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Icache<sp/>hits<sp/>for<sp/>lookups<sp/>:<sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;ihitslookup<sp/>-<sp/>start-&gt;ihitslookup);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;******<sp/>Delta<sp/>Icache<sp/>hits<sp/>for<sp/>lines<sp/>:<sp/><sp/><sp/>%d\r\n&quot;</highlight><highlight class="normal">,<sp/>end-&gt;ihitsline<sp/>-<sp/>start-&gt;ihitsline);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1ga7012775f3ad475e8d977b60766182a8e" kindref="member">ns_reset_perf_counters</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;CYCCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;CPICNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;EXCCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;SLEEPCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;LSUCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;FOLDCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1ga289ac76609da3ca33b9ce20d1be05218" kindref="member">ns_init_perf_profiler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;CTRL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-cache-profile_1ga7012775f3ad475e8d977b60766182a8e" kindref="member">ns_reset_perf_counters</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1gab4d63f1d9add998303ee63c64c47a48b" kindref="member">ns_start_perf_profiler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>am_hal_itm_enable();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DWT-&gt;CTRL<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_delay_us(10000);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>DWT-&gt;CTRL<sp/>=<sp/>_VAL2FLD(DWT_CTRL_CYCCNTENA,<sp/>1)<sp/>|<sp/>_VAL2FLD(DWT_CTRL_CPIEVTENA,<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_VAL2FLD(DWT_CTRL_EXCEVTENA,<sp/>1)<sp/>|<sp/>_VAL2FLD(DWT_CTRL_SLEEPEVTENA,<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_VAL2FLD(DWT_CTRL_LSUEVTENA,<sp/>1)<sp/>|<sp/>_VAL2FLD(DWT_CTRL_FOLDEVTENA,<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_VAL2FLD(DWT_CTRL_CYCEVTENA,<sp/>1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1ga6ee9e1f3c1bec6055335583693339952" kindref="member">ns_stop_perf_profiler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>DWT-&gt;CTRL<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1gac4431d0efc47f8b2c1fcf20f05c0f430" kindref="member">ns_capture_perf_profiler</ref>(<ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref><sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;cyccnt<sp/>=<sp/>DWT-&gt;CYCCNT;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;cpicnt<sp/>=<sp/>DWT-&gt;CPICNT;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;exccnt<sp/>=<sp/>DWT-&gt;EXCCNT;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;sleepcnt<sp/>=<sp/>DWT-&gt;SLEEPCNT;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;lsucnt<sp/>=<sp/>DWT-&gt;LSUCNT;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;foldcnt<sp/>=<sp/>DWT-&gt;FOLDCNT;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>ns_delta_byte_counter_wrap(uint32_t<sp/>e,<sp/>uint32_t<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>retval<sp/>=<sp/>(e<sp/>&lt;<sp/>s)<sp/>?<sp/>(e<sp/>+<sp/>256<sp/>-<sp/>s)<sp/>:<sp/>e<sp/>-<sp/>s;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1ga2e7ab288293bccc9914ee9e3e0235877" kindref="member">ns_delta_perf</ref>(<ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref><sp/>*s,<sp/><ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref><sp/>*e,<sp/><ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;cyccnt<sp/>=<sp/>e-&gt;cyccnt<sp/>-<sp/>s-&gt;cyccnt;<sp/></highlight><highlight class="comment">//<sp/>32<sp/>bits,<sp/>probably<sp/>won&apos;t<sp/>wrap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;cpicnt<sp/>=<sp/>ns_delta_byte_counter_wrap(e-&gt;cpicnt,<sp/>s-&gt;cpicnt);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;exccnt<sp/>=<sp/>ns_delta_byte_counter_wrap(e-&gt;exccnt,<sp/>s-&gt;exccnt);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;sleepcnt<sp/>=<sp/>ns_delta_byte_counter_wrap(e-&gt;sleepcnt,<sp/>s-&gt;sleepcnt);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lsucnt<sp/>=<sp/>ns_delta_byte_counter_wrap(e-&gt;lsucnt,<sp/>s-&gt;lsucnt);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;foldcnt<sp/>=<sp/>ns_delta_byte_counter_wrap(e-&gt;foldcnt,<sp/>s-&gt;foldcnt);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ns-cache-profile_1gae1a66a1314758decfabc97b53c679d81" kindref="member">ns_print_perf_profile</ref>(<ref refid="structns__perf__counters__t" kindref="compound">ns_perf_counters_t</ref><sp/>*c)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>instruction_count;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>instruction_count<sp/>=<sp/>c-&gt;cyccnt<sp/>-<sp/>c-&gt;cpicnt<sp/>-<sp/>c-&gt;exccnt<sp/>-<sp/>c-&gt;sleepcnt<sp/>-<sp/>c-&gt;lsucnt<sp/>+<sp/>c-&gt;foldcnt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Summary:<sp/>%d<sp/>cycles,<sp/>%d<sp/>instructions\n&quot;</highlight><highlight class="normal">,<sp/>c-&gt;cyccnt,<sp/>instruction_count);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Details\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Cycle<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c-&gt;cyccnt);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;CPI<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c-&gt;cpicnt);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Exception<sp/>Entry/Exits<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c-&gt;exccnt);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Sleep<sp/>Cycles<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c-&gt;sleepcnt);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Load/Store<sp/>Wait<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c-&gt;lsucnt);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Folded<sp/>(cycles<sp/>saved<sp/>by<sp/>zero-cycle<sp/>instructions)<sp/>Count:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c-&gt;foldcnt);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-utils/src/ns_perf_profile.c"/>
  </compounddef>
</doxygen>
