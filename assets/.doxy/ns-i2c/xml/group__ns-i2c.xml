<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="group__ns-i2c" kind="group">
    <compoundname>ns-i2c</compoundname>
    <title>Ns-i2c</title>
    <innerclass refid="structns__i2c__config__t" prot="public">ns_i2c_config_t</innerclass>
    <innerclass refid="structns__i2c__msg__t" prot="public">ns_i2c_msg_t</innerclass>
    <innergroup refid="group__ns-_m_a_x86150">Ns-MAX86150</innergroup>
    <innergroup refid="group__ns-_m_p_u6050">Ns-MPU6050</innergroup>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ns-i2c_1gaee3ec38ff762080795eee602a7ed33fc" prot="public" static="no" strong="no">
        <type></type>
        <name>ns_i2c_status_e</name>
        <enumvalue id="group__ns-i2c_1ggaee3ec38ff762080795eee602a7ed33fca3d48caef0a84f4e688f802248204b873" prot="public">
          <name>NS_I2C_STATUS_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-i2c_1ggaee3ec38ff762080795eee602a7ed33fca8d25b898ecf4c30887bdeeb9c793b3e4" prot="public">
          <name>NS_I2C_STATUS_ERROR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="39" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="group__ns-i2c_1ga61d04f43fb4b9380d18e0d45b36a601f" prot="public" static="no" strong="no">
        <type></type>
        <name>ns_i2c_xfer_flag_e</name>
        <enumvalue id="group__ns-i2c_1gga61d04f43fb4b9380d18e0d45b36a601fa811f3f027ca12fe2dcea05ecddd207d0" prot="public">
          <name>NS_I2C_XFER_WR</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-i2c_1gga61d04f43fb4b9380d18e0d45b36a601fa1c71f4e6ed7d7bf69fd10b25eb25d6b6" prot="public">
          <name>NS_I2C_XFER_RD</name>
          <initializer>= (1u &lt;&lt; 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="55" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" bodystart="55" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__ns-i2c_1ga33f2e94badf28606cf9400124a3d3b17" prot="public" static="no" mutable="no">
        <type>const ns_core_api_t</type>
        <definition>const ns_core_api_t ns_i2c_V0_0_1</definition>
        <argsstring></argsstring>
        <name>ns_i2c_V0_0_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="34" column="28" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="18" bodyend="-1" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="34" declcolumn="28"/>
      </memberdef>
      <memberdef kind="variable" id="group__ns-i2c_1ga729a5e2f7e5baa81a87a8cab7a780ca4" prot="public" static="no" mutable="no">
        <type>const ns_core_api_t</type>
        <definition>const ns_core_api_t ns_i2c_V1_0_0</definition>
        <argsstring></argsstring>
        <name>ns_i2c_V1_0_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="35" column="28" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="19" bodyend="-1" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="35" declcolumn="28"/>
      </memberdef>
      <memberdef kind="variable" id="group__ns-i2c_1gac22b7bd535e474d696aa860117f6dece" prot="public" static="no" mutable="no">
        <type>const ns_core_api_t</type>
        <definition>const ns_core_api_t ns_i2c_oldest_supported_version</definition>
        <argsstring></argsstring>
        <name>ns_i2c_oldest_supported_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="36" column="28" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="20" bodyend="-1" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="36" declcolumn="28"/>
      </memberdef>
      <memberdef kind="variable" id="group__ns-i2c_1gaa772fbf579700bd97bb3cb44e9d3dc90" prot="public" static="no" mutable="no">
        <type>const ns_core_api_t</type>
        <definition>const ns_core_api_t ns_i2c_current_version</definition>
        <argsstring></argsstring>
        <name>ns_i2c_current_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="37" column="28" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="22" bodyend="-1" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="37" declcolumn="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ns-i2c_1gaabcf91f33f95dec449ea8d5f1a9adef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_interface_init</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t speed)</argsstring>
        <name>ns_i2c_interface_init</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Initialize I2C on one of the IOM (IO managers) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C speed in Hz </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="71" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="31" bodyend="59" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="71" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1ga822cc31eb17394f82c159e6df0c0d67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_read</definition>
        <argsstring>(ns_i2c_config_t *cfg, const void *buf, uint32_t size, uint16_t addr)</argsstring>
        <name>ns_i2c_read</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Perform low-level I2C read using IOM transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store read bytes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C device address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="80" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="69" bodyend="86" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="80" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1ga5757f76f1bb7b4bc298f6dfb21ef15c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_write</definition>
        <argsstring>(ns_i2c_config_t *cfg, const void *buf, uint32_t size, uint16_t addr)</argsstring>
        <name>ns_i2c_write</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Perform low-level I2C write using IOM transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer of bytes to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C device address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="89" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="96" bodyend="113" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="89" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1ga1d8814cf1501280bd5eff6d0772c00a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_write_read</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint16_t addr, const void *writeBuf, size_t numWrite, void *readBuf, size_t numRead)</argsstring>
        <name>ns_i2c_write_read</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>writeBuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numWrite</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>readBuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numRead</declname>
        </param>
        <briefdescription>
<para>Perform low-level I2C write followed by immediate read. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeBuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Write buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numWrite</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>readBuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Read buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numRead</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C device address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="100" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="125" bodyend="129" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="100" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1ga44c2009f6720856edc6b5bc2f7aac4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_transfer</definition>
        <argsstring>(ns_i2c_config_t *cfg, ns_i2c_msg_t *msgs, size_t numMsgs)</argsstring>
        <name>ns_i2c_transfer</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="structns__i2c__msg__t" kindref="compound">ns_i2c_msg_t</ref> *</type>
          <declname>msgs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numMsgs</declname>
        </param>
        <briefdescription>
<para>Perform sequence of low-level I2C transfers (similar to Linux) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msgs</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C messages to transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numMsgs</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of I2C messsages </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="110" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c.c" bodystart="138" bodyend="152" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" declline="110" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1gab7550497c4b76abb7cb964632b0bc39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_read_reg</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t regAddr, uint8_t *value, uint8_t mask)</argsstring>
        <name>ns_i2c_read_reg</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>regAddr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Read 8-bit register over I2C. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Register Value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Read mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle obtained from ns_i2c_interface_init </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>8-bit register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Register value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Read mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" line="32" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c_register_driver.c" bodystart="89" bodyend="100" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" declline="32" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1gabb9e32d516ca511624b2e50480e34ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_write_reg</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t regAddr, uint8_t value, uint8_t mask)</argsstring>
        <name>ns_i2c_write_reg</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>regAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Write 8-bit register over I2C. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Register Value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Write mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle obtained from ns_i2c_interface_init </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>8-bit register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Register value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Write mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" line="45" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c_register_driver.c" bodystart="113" bodyend="126" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" declline="45" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1gaa8ccff053b2fcd4bc386d4a39735741d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_read_sequential_regs</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint32_t regAddr, void *buf, uint32_t size)</argsstring>
        <name>ns_i2c_read_sequential_regs</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>regAddr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Read sequential 8-bit registers over I2C. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>First register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store register values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of registers to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>First 8-bit register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store register values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of registers to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" line="58" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c_register_driver.c" bodystart="27" bodyend="45" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" declline="58" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-i2c_1ga778d58af078c2b77c2175a82ed80b9ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ns_i2c_write_sequential_regs</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint32_t regAddr, void *buf, uint32_t size)</argsstring>
        <name>ns_i2c_write_sequential_regs</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>regAddr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Write sequential 8-bit registers over I2C. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>First register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer of values to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>First 8-bit register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer of values to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" line="71" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_i2c_register_driver.c" bodystart="58" bodyend="76" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c_register_driver.h" declline="71" declcolumn="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ns-i2c_1gacc321db0eae847326238cc889c97bda8" prot="public" static="no">
        <name>NS_I2C_V0_0_1</name>
        <initializer>        { .major = 0, .minor = 0, .revision = 1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="25" column="13" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ns-i2c_1ga7ce29395e1ce633bb5451fce87e2aded" prot="public" static="no">
        <name>NS_I2C_V1_0_0</name>
        <initializer>        { .major = 1, .minor = 0, .revision = 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="27" column="13" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ns-i2c_1ga256e64af2f540711dbbf7dfbdc89c7dc" prot="public" static="no">
        <name>NS_I2C_OLDEST_SUPPORTED_VERSION</name>
        <initializer>NS_I2C_V0_0_1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="30" column="13" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ns-i2c_1gaf986c0eba32ba9810836e5a1884a1e6e" prot="public" static="no">
        <name>NS_I2C_CURRENT_VERSION</name>
        <initializer>NS_I2C_V1_0_0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="31" column="13" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ns-i2c_1gaba1e9ff347327f96bc97bcf1e3250795" prot="public" static="no">
        <name>NS_I2C_API_ID</name>
        <initializer>0xCA0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" line="32" column="13" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_i2c.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
