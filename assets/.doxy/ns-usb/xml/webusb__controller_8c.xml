<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="webusb__controller_8c" kind="file" language="C++">
    <compoundname>webusb_controller.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="webusb__controller_8h" local="yes">webusb_controller.h</includes>
    <includes refid="usb__descriptors_8h" local="yes">usb_descriptors.h</includes>
    <includes refid="ns__usb_8h" local="yes">ns_usb.h</includes>
    <includes local="yes">tusb.h</includes>
    <includes local="yes">am_util_debug.h</includes>
    <includes local="yes">ns_ambiqsuite_harness.h</includes>
    <incdepgraph>
      <node id="8">
        <label>ns_usb.h</label>
        <link refid="ns__usb_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>usb_descriptors.h</label>
        <link refid="usb__descriptors_8h_source"/>
      </node>
      <node id="5">
        <label>webusb_controller.h</label>
        <link refid="webusb__controller_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c</label>
        <link refid="webusb__controller_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>am_bsp.h</label>
      </node>
      <node id="10">
        <label>am_mcu_apollo.h</label>
      </node>
      <node id="11">
        <label>am_util.h</label>
      </node>
      <node id="14">
        <label>am_util_debug.h</label>
      </node>
      <node id="15">
        <label>ns_ambiqsuite_harness.h</label>
      </node>
      <node id="12">
        <label>ns_core.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="13">
        <label>tusb.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structwebusb__parameter__t" prot="public">webusb_parameter_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="webusb__controller_8c_1aa02bff331d7f1e710dcc060056f19206" prot="public" static="no">
        <name>BYTES_TO_UINT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>    { n = (((uint16_t)(p)[0] &lt;&lt; 8) + (uint16_t)(p)[1]); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="69" column="9" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="webusb__controller_8c_1a789372e640f135f249ce3848cd3fc74b" prot="public" static="no">
        <name>BSTREAM_TO_UINT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>    {                                                                                              \
        BYTES_TO_UINT16(n, p);                                                                     \
        p += 2;                                                                                    \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="71" column="9" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="webusb__controller_8c_1aa6a2e6ac950c806ef19cc19c7c349ee2" prot="public" static="no">
        <name>DESC_MS_OS_20</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="79" column="9" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="webusb__controller_8c_1a7c8e673cfe9393994d4c187f2173a5a6" prot="public" static="no">
        <name>WEBUSB_REQUEST_SET_CONTROL_LINE_STATE</name>
        <initializer>0x22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="80" column="9" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="webusb__controller_8c_1ab49efb4d2268e3e1d617ffe0432eaef7" prot="public" static="no">
        <name>REWRIT_NUMBER</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="81" column="9" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="webusb__controller_8c_1abc6126af1d45847bc59afa0aa3216b04" prot="public" static="no" strong="no">
        <type></type>
        <name>@3</name>
        <enumvalue id="webusb__controller_8c_1abc6126af1d45847bc59afa0aa3216b04a0c655fb231e7b896a415339c5d8b9397" prot="public">
          <name>RX_INVALID</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="webusb__controller_8c_1abc6126af1d45847bc59afa0aa3216b04abb789b6e2254b9a1d513b2d56e4d66f2" prot="public">
          <name>RX_ACORE_MSG</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="webusb__controller_8c_1abc6126af1d45847bc59afa0aa3216b04a4fa4040e503c821fc24d64931c2d5653" prot="public">
          <name>RX_RAW_DATA</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="97" column="1" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="97" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="webusb__controller_8c_1acc06fac57c814ab75d9556e57c3d6be5" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rx_buf[512]</definition>
        <argsstring>[512]</argsstring>
        <name>rx_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="85" column="16" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="webusb__controller_8c_1a2902f2c60b84677f528c8444794edc1b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool webusb_connected</definition>
        <argsstring></argsstring>
        <name>webusb_connected</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="87" column="13" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="webusb__controller_8c_1a15eabb0f8e0a85edaaa85e61e8c8d02b" prot="public" static="yes" mutable="no">
        <type><ref refid="structwebusb__parameter__t" kindref="compound">webusb_parameter_t</ref></type>
        <definition>webusb_parameter_t webusb_parameter</definition>
        <argsstring></argsstring>
        <name>webusb_parameter</name>
        <initializer>= {
    .rx_msg_cb = NULL,
    .rx_raw_cb = NULL,
    .rx_msg_param = NULL,
    .rx_raw_param = NULL,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="89" column="27" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="webusb__controller_8c_1a13e2fb6e00b5192eef1a15d98f916448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tud_mount_cb</definition>
        <argsstring>(void)</argsstring>
        <name>tud_mount_cb</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The functions in the array below are prototyped as TU_ATTR_WEAK in Tinyusb. The linkers were not always including these functions in the executable. Using this array forces the linker to keep the function.</para>
<para>In summary,the Tinyusb functions prototyped as weak (macro TU_ATTR_WEAK) and implemented in the user code should be added to the array below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="129" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1a0b3d5a3b4f78ed731c3af09c5506343a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tud_umount_cb</definition>
        <argsstring>(void)</argsstring>
        <name>tud_umount_cb</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="133" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1a84ceba8c41ca46959876fc7cbc0e0071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tud_suspend_cb</definition>
        <argsstring>(bool remote_wakeup_en)</argsstring>
        <name>tud_suspend_cb</name>
        <param>
          <type>bool</type>
          <declname>remote_wakeup_en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="139" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1a1e7d894258d83cb25bf9e0fa742b70c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tud_resume_cb</definition>
        <argsstring>(void)</argsstring>
        <name>tud_resume_cb</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="145" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1a5219051df5ec9171c637799a384c3602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tud_vendor_rx_cb</definition>
        <argsstring>(uint8_t itf)</argsstring>
        <name>tud_vendor_rx_cb</name>
        <param>
          <type>uint8_t</type>
          <declname>itf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="148" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="148" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1ae3053a796a3a1be9db26ff8a08509d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tud_vendor_control_xfer_cb</definition>
        <argsstring>(uint8_t rhport, uint8_t stage, tusb_control_request_t const *request)</argsstring>
        <name>tud_vendor_control_xfer_cb</name>
        <param>
          <type>uint8_t</type>
          <declname>rhport</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>tusb_control_request_t const *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="191" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="191" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1a0d92ebc26f1f6ed65d246e0938ab936c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t webusb_send_data</definition>
        <argsstring>(uint8_t *buf, uint32_t bufsize)</argsstring>
        <name>webusb_send_data</name>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Blocking USB Send Data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer with data to be sent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested number of bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t The amount of data written to the ring-buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="246" column="10" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="246" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1a7819e99d0399141b263b2844d9011f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void webusb_register_msg_cb</definition>
        <argsstring>(webusb_rx_cb cb, void *param)</argsstring>
        <name>webusb_register_msg_cb</name>
        <param>
          <type>webusb_rx_cb</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Register message callback function and pass to callback pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cd</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to user parameter which will be passed to callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="292" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="webusb__controller_8c_1ac65bfedfe3de244f77b36d2f46b51647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void webusb_register_raw_cb</definition>
        <argsstring>(webusb_rx_cb cb, void *param)</argsstring>
        <name>webusb_register_raw_cb</name>
        <param>
          <type>webusb_rx_cb</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Register raw callback function and pass to callback pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cd</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to user parameter which will be passed to callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" line="297" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c" bodystart="297" bodyend="300"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>web usb controller. </para>
    </briefdescription>
    <detaileddescription>
<para>This example demonstrates how to use the USB CDC-ACM device class. it will echo back the the input from the terminal tool. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight><highlight class="comment">//*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>${copyright}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>part<sp/>of<sp/>revision<sp/>${version}<sp/>of<sp/>the<sp/>AmbiqSuite<sp/>Development<sp/>Package.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//*****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Ha<sp/>Thach<sp/>(tinyusb.org)</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="webusb__controller_8h" kindref="compound">webusb_controller.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;usb_descriptors.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_usb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tusb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;am_util_debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_ambiqsuite_harness.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Structure<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structwebusb__parameter__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>webusb_rx_cb<sp/>rx_msg_cb;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>webusb_rx_cb<sp/>rx_raw_cb;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*rx_msg_param;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*rx_raw_param;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><ref refid="structwebusb__parameter__t" kindref="compound">webusb_parameter_t</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MACRO<sp/>CONSTANT<sp/>TYPEDEF<sp/>PROTYPES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_TO_UINT16(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>n<sp/>=<sp/>(((uint16_t)(p)[0]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(uint16_t)(p)[1]);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_UINT16(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BYTES_TO_UINT16(n,<sp/>p);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>OS<sp/>2.0<sp/>compatible<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DESC_MS_OS_20<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WEBUSB_REQUEST_SET_CONTROL_LINE_STATE<sp/>0x22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REWRIT_NUMBER<sp/>40<sp/></highlight><highlight class="comment">//<sp/>allow<sp/>for<sp/>long<sp/>blocks<sp/>to<sp/>be<sp/>sent<sp/>in<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>max<sp/>of<sp/>USB2.0<sp/>bulk<sp/>type<sp/>packet<sp/>size<sp/>is<sp/>512<sp/>in<sp/>High<sp/>Speed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>rx_buf[512];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WebUSB<sp/>connections<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>webusb_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structwebusb__parameter__t" kindref="compound">webusb_parameter_t</ref><sp/>webusb_parameter<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>.rx_msg_cb<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>.rx_raw_cb<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>.rx_msg_param<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>.rx_raw_param<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>of<sp/>frame<sp/>received<sp/>via<sp/>WebUSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_INVALID<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_ACORE_MSG<sp/>=<sp/>1,<sp/></highlight><highlight class="comment">//<sp/>Audio<sp/>core<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>RX_RAW_DATA<sp/>=<sp/>2,<sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Further<sp/>note:<sp/>Armlink<sp/>laughs<sp/>in<sp/>the<sp/>face<sp/>of<sp/>this<sp/>attempt<sp/>to<sp/>keep<sp/>weak<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>may<sp/>or<sp/>may<sp/>not<sp/>include<sp/>them<sp/>based<sp/>on<sp/>some<sp/>internal<sp/>whimsical<sp/>logic.<sp/>See</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neuralspot_toolchainmk<sp/>to<sp/>see<sp/>how<sp/>we<sp/>work<sp/>around<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>volatile<sp/>const<sp/>void<sp/>*pTUSB_WeakFcnPointers[]<sp/>=<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(void<sp/>*)tud_mount_cb,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifndef<sp/>TUSB_ADDED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(void<sp/>*)tud_umount_cb,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(void<sp/>*)tud_suspend_cb,<sp/>(void<sp/>*)tud_resume_cb,<sp/>(void<sp/>*)tud_vendor_rx_cb,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Device<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Invoked<sp/>when<sp/>device<sp/>is<sp/>mounted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="webusb__controller_8c_1a13e2fb6e00b5192eef1a15d98f916448" kindref="member">tud_mount_cb</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>webusb_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TUSB_ADDED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Invoked<sp/>when<sp/>device<sp/>is<sp/>unmounted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tud_umount_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>webusb_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Invoked<sp/>when<sp/>usb<sp/>bus<sp/>is<sp/>suspended</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>remote_wakeup_en<sp/>:<sp/>if<sp/>host<sp/>allow<sp/>us<sp/><sp/>to<sp/>perform<sp/>remote<sp/>wakeup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Within<sp/>7ms,<sp/>device<sp/>must<sp/>draw<sp/>an<sp/>average<sp/>of<sp/>current<sp/>less<sp/>than<sp/>2.5<sp/>mA<sp/>from<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tud_suspend_cb(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remote_wakeup_en)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)remote_wakeup_en;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>webusb_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Invoked<sp/>when<sp/>usb<sp/>bus<sp/>is<sp/>resumed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tud_resume_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>webusb_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Invoked<sp/>when<sp/>received<sp/>new<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tud_vendor_rx_cb(uint8_t<sp/>itf)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)itf;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytes_rx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>the<sp/>remain<sp/>size<sp/>of<sp/>RX<sp/>ring-buffer<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tud_vendor_available())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>frame_header<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p<sp/>=<sp/>rx_buf;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_rx<sp/>=<sp/>tud_vendor_read(rx_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_buf));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>frame<sp/>header<sp/>is<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BSTREAM_TO_UINT16(frame_header,<sp/>p);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>frame<sp/>header,<sp/>then<sp/>transfer<sp/>buffer<sp/>to<sp/>callback<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(frame_header)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RX_ACORE_MSG:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(webusb_parameter.rx_msg_cb)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>webusb_parameter.rx_msg_cb(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>bytes_rx<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(frame_header),<sp/>webusb_parameter.rx_msg_param);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RX_RAW_DATA:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(webusb_parameter.rx_raw_cb)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>webusb_parameter.rx_raw_cb(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>bytes_rx<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(frame_header),<sp/>webusb_parameter.rx_raw_param);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Unsupported<sp/>type<sp/>of<sp/>Rx<sp/>Frame<sp/>Header:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>frame_header);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WebUSB<sp/>use<sp/>vendor<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Invoked<sp/>when<sp/>a<sp/>control<sp/>transfer<sp/>occurred<sp/>on<sp/>an<sp/>interface<sp/>of<sp/>this<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Driver<sp/>response<sp/>accordingly<sp/>to<sp/>the<sp/>request<sp/>and<sp/>the<sp/>transfer<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(setup/data/ack)<sp/>return<sp/>false<sp/>to<sp/>stall<sp/>control<sp/>endpoint<sp/>(e.g<sp/>unsupported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>request)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tud_vendor_control_xfer_cb(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rhport,<sp/>uint8_t<sp/>stage,<sp/>tusb_control_request_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*request)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_u___a_t_t_r___p_a_c_k_e_d" kindref="compound">ns_tusb_desc_webusb_url_t</ref><sp/>*<sp/>desc_url<sp/>=<sp/>ns_get_desc_url();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>with<sp/>DATA<sp/>&amp;<sp/>ACK<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stage<sp/>!=<sp/>CONTROL_STAGE_SETUP)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(request-&gt;bmRequestType_bit.type)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TUSB_REQ_TYPE_VENDOR:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(request-&gt;bRequest)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VENDOR_REQUEST_WEBUSB:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match<sp/>vendor<sp/>request<sp/>in<sp/>BOS<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>landing<sp/>page<sp/>url</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tud_control_xfer(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhport,<sp/>request,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(uintptr_t)desc_url,<sp/>desc_url-&gt;bLength);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VENDOR_REQUEST_MICROSOFT:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;wIndex<sp/>==<sp/>DESC_MS_OS_20)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>Microsoft<sp/>OS<sp/>2.0<sp/>compatible<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>total_len;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;total_len,<sp/>desc_ms_os_20<sp/>+<sp/>8,<sp/>2);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tud_control_xfer(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhport,<sp/>request,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(uintptr_t)desc_ms_os_20,<sp/>total_len);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TUSB_REQ_TYPE_CLASS:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;bRequest<sp/>==<sp/>WEBUSB_REQUEST_SET_CONTROL_LINE_STATE)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Receive<sp/>the<sp/>webusb<sp/>line<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request-&gt;wValue<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>webusb_connected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>webusb_connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>response<sp/>with<sp/>status<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tud_control_status(rhport,<sp/>request);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stall<sp/>unknown<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">uint32_t<sp/><ref refid="webusb__controller_8c_1a0d92ebc26f1f6ed65d246e0938ab936c" kindref="member">webusb_send_data</ref>(uint8_t<sp/>*buf,<sp/>uint32_t<sp/>bufsize)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytes_tx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bufremain<sp/>=<sp/>bufsize;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>first<sp/>20<sp/>bytes<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;Sending<sp/>%d<sp/>bytes:<sp/>&quot;,<sp/>bufsize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>ns_lp_printf(&quot;0x%02x<sp/>&quot;,<sp/>buf[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(webusb_connected<sp/>&amp;&amp;<sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>buf<sp/>can&apos;t<sp/>be<sp/>written<sp/>all<sp/>at<sp/>once,<sp/>write<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>upper<sp/>limit<sp/>of<sp/>rewrite<sp/>numbers<sp/>is<sp/>reached<sp/>or<sp/>buf<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>written<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>REWRIT_NUMBER)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns_lp_printf(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>The<sp/>number<sp/>of<sp/>rewriting<sp/>is<sp/>over<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bytes_tx<sp/>=<sp/>tud_vendor_write_pkt((void<sp/>*)(buf<sp/>+<sp/>bufsize<sp/>-<sp/>bufremain),<sp/>bufremain);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_tx<sp/>=<sp/>tud_vendor_write((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(buf<sp/>+<sp/>bufsize<sp/>-<sp/>bufremain),<sp/>bufremain);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tud_vendor_write_flush();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ns_lp_printf(&quot;Sent<sp/>%d<sp/>of<sp/>%d<sp/>bytes\n&quot;,<sp/>bytes_tx,<sp/>bufsize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufremain<sp/>-=<sp/>bytes_tx;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bufremain);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufremain)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collects<sp/>the<sp/>amount<sp/>of<sp/>data<sp/>that<sp/>has<sp/>not<sp/>been<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bufsize<sp/>-<sp/>bufremain;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>webusb_task(void)<sp/>{<sp/>tud_task();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>webusb_init(void)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>init<sp/>tinyusb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>tusb_init();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="webusb__controller_8c_1a7819e99d0399141b263b2844d9011f58" kindref="member">webusb_register_msg_cb</ref>(webusb_rx_cb<sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>webusb_parameter.rx_msg_cb<sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>webusb_parameter.rx_msg_param<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="webusb__controller_8c_1ac65bfedfe3de244f77b36d2f46b51647" kindref="member">webusb_register_raw_cb</ref>(webusb_rx_cb<sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>webusb_parameter.rx_raw_cb<sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>webusb_parameter.rx_raw_param<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-usb/src/overrides/webusb_controller.c"/>
  </compounddef>
</doxygen>
