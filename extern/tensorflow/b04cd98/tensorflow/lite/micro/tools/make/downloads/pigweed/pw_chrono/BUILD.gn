# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/facade.gni")
import("$dir_pw_chrono/backend.gni")
import("$dir_pw_docgen/docs.gni")
import("$dir_pw_unit_test/test.gni")

config("public_include_path") {
  include_dirs = [ "public" ]
  visibility = [ ":*" ]
}

pw_source_set("epoch") {
  public = [ "public/pw_chrono/epoch.h" ]
  public_configs = [ ":public_include_path" ]
}

pw_facade("system_clock") {
  backend = pw_chrono_SYSTEM_CLOCK_BACKEND
  public_configs = [ ":public_include_path" ]
  public = [ "public/pw_chrono/system_clock.h" ]
  public_deps = [
    ":epoch",
    "$dir_pw_preprocessor",
  ]
  sources = [ "system_clock.cc" ]
}

# Dependency injectable implementation of pw::chrono::SystemClock::Interface.
pw_source_set("simulated_system_clock") {
  public_configs = [ ":public_include_path" ]
  public = [ "public/pw_chrono/simulated_system_clock.h" ]
  public_deps = [
    ":system_clock",
    "$dir_pw_sync:spin_lock",
  ]
}

pw_test_group("tests") {
  tests = [
    ":simulated_system_clock_test",
    ":system_clock_facade_test",
  ]
}

pw_test("simulated_system_clock_test") {
  enable_if = pw_chrono_SYSTEM_CLOCK_BACKEND != ""
  sources = [ "simulated_system_clock_test.cc" ]
  deps = [ ":simulated_system_clock" ]
}

pw_test("system_clock_facade_test") {
  enable_if = pw_chrono_SYSTEM_CLOCK_BACKEND != ""
  sources = [
    "system_clock_facade_test.cc",
    "system_clock_facade_test_c.c",
  ]
  deps = [
    ":system_clock",
    "$dir_pw_preprocessor",
    pw_chrono_SYSTEM_CLOCK_BACKEND,
  ]
}

pw_doc_group("docs") {
  sources = [ "docs.rst" ]
}
