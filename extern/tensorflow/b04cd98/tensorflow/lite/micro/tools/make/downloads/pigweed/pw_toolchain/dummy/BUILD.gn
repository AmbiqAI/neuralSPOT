# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_toolchain/universal_tools.gni")

# A dummy toolchain which is set as the default for Pigweed. This is never used;
# the top-level BUILD.gn enumerates the toolchains for each build.
toolchain("dummy") {
  tool("stamp") {
    forward_variables_from(pw_universal_stamp, "*")
  }

  tool("copy") {
    forward_variables_from(pw_universal_copy, "*")
  }

  # If the user tries to build a target with the default toolchain, run a script
  # printing out the error.
  _bad_toolchain_command = "python " + rebase_path("bad_toolchain.py")

  tool("asm") {
    command = _bad_toolchain_command
    outputs =
        [ "{{source_out_dir}}/{{target_output_name}}.{{source_file_part}}.o" ]
  }

  tool("cc") {
    command = _bad_toolchain_command
    outputs =
        [ "{{source_out_dir}}/{{target_output_name}}.{{source_file_part}}.o" ]
  }

  tool("cxx") {
    command = _bad_toolchain_command
    outputs =
        [ "{{source_out_dir}}/{{target_output_name}}.{{source_file_part}}.o" ]
  }

  tool("link") {
    command = _bad_toolchain_command
    outputs = [ "{{output_dir}}/{{target_output_name}}{{output_extension}}" ]
  }

  tool("alink") {
    command = _bad_toolchain_command
    outputs = [ "{{output_dir}}/{{target_output_name}}{{output_extension}}" ]
  }

  tool("solink") {
    command = _bad_toolchain_command
    outputs = [ "{{output_dir}}/{{target_output_name}}{{output_extension}}" ]
  }
}
