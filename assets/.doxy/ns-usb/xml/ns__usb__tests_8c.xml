<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ns__usb__tests_8c" kind="file" language="C++">
    <compoundname>ns_usb_tests.c</compoundname>
    <includes refid="ns__usb_8h" local="yes">ns_usb.h</includes>
    <includes local="yes">unity/unity.h</includes>
    <includes local="yes">ns_core.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ns_usb.h</label>
        <link refid="ns__usb_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>webusb_controller.h</label>
        <link refid="webusb__controller_8h"/>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c</label>
        <link refid="ns__usb__tests_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>am_bsp.h</label>
      </node>
      <node id="4">
        <label>am_mcu_apollo.h</label>
      </node>
      <node id="5">
        <label>am_util.h</label>
      </node>
      <node id="6">
        <label>ns_core.h</label>
      </node>
      <node id="8">
        <label>unity/unity.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ns__usb__tests_8c_1a7c8bcccb878d3d8bbee370e4d6d14474" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rx_buf[4096]</definition>
        <argsstring>[4096]</argsstring>
        <name>rx_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="5" column="10" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ns__usb__tests_8c_1aaa6566fa6aff45ab0176b3799c978a1c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t tx_buf[4096]</definition>
        <argsstring>[4096]</argsstring>
        <name>tx_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="6" column="10" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ns__usb__tests_8c_1a044c58a41f9ab7ddfc4b8a5edf95f1f3" prot="public" static="no" mutable="no">
        <type><ref refid="structns__usb__config__t" kindref="compound">ns_usb_config_t</ref></type>
        <definition>ns_usb_config_t cfg</definition>
        <argsstring></argsstring>
        <name>cfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="7" column="18" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ns__usb__tests_8c_1a67fa0b51427eec6d4225c7226fd58662" prot="public" static="no" mutable="no">
        <type>usb_handle_t</type>
        <definition>usb_handle_t handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="8" column="15" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ns__usb__tests_8c_1adfb335eebb4beafef877db8238ea65e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_usb_cfg</definition>
        <argsstring>()</argsstring>
        <name>reset_usb_cfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="10" column="7" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="10" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="ns__usb__tests_8c_1a256d552e29fa0ace1c9fe7576197f054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_usb_tests_pre_test_hook</definition>
        <argsstring>()</argsstring>
        <name>ns_usb_tests_pre_test_hook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="22" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="ns__usb__tests_8c_1abb54876ee0dd25fce377791e4c21b962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_usb_tests_post_test_hook</definition>
        <argsstring>()</argsstring>
        <name>ns_usb_tests_post_test_hook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="26" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="ns__usb__tests_8c_1a6dab3d267498de8e28bd5bff836e719c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_usb_test_init</definition>
        <argsstring>()</argsstring>
        <name>ns_usb_test_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="31" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="ns__usb__tests_8c_1ac9fdab9764b1e34b5f4505dee32c7982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_usb_test_init_null_config</definition>
        <argsstring>()</argsstring>
        <name>ns_usb_test_init_null_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="37" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="ns__usb__tests_8c_1a6c0989c1d9681f4b9eb77c6f3a514d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_usb_test_init_null_buffers</definition>
        <argsstring>()</argsstring>
        <name>ns_usb_test_init_null_buffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="43" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="ns__usb__tests_8c_1af33825249e459ff1e505ee0c66467461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_usb_test_init_invalid_api</definition>
        <argsstring>()</argsstring>
        <name>ns_usb_test_init_invalid_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" line="52" column="6" bodyfile="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c" bodystart="52" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ns_usb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;unity/unity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ns_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/>uint8_t<sp/>rx_buf[4096];</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/>uint8_t<sp/>tx_buf[4096];</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><ref refid="structns__usb__config__t" kindref="compound">ns_usb_config_t</ref><sp/>cfg;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/>usb_handle_t<sp/>handle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_usb_cfg()<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1aabcd9dc7d127647a2cb021e31704b855" kindref="member">api</ref><sp/>=<sp/>&amp;ns_usb_V1_0_0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1a0ccfdaca8e4d4f2ddbe20cc880b093df" kindref="member">deviceType</ref><sp/>=<sp/><ref refid="group__ns-usb_1gga4aca6e5a14e39094d9f64c7c5835acc8a7afaa83de0d2f3855d9c028552d2605d" kindref="member">NS_USB_VENDOR_DEVICE</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1ad0ba03a344422896457d383a1b639430" kindref="member">rx_buffer</ref><sp/>=<sp/>&amp;rx_buf;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1a4e79d9d8f1ede0e15bbd1089f213cfad" kindref="member">rx_bufferLength</ref><sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1a94c0d9c156f1eaaeb6d317a4670758be" kindref="member">tx_buffer</ref><sp/>=<sp/>&amp;tx_buf;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1ae7fc102dd2312880a5268661c83e1239" kindref="member">tx_bufferLength</ref><sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1a1c05427e1607389966f3049d7b74f43e" kindref="member">rx_cb</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1a4053340280435b27d6ae16aca79f81c1" kindref="member">tx_cb</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1a57c2c423abcc8060bf935c859c2116e3" kindref="member">service_cb</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_usb_tests_pre_test_hook()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_usb_cfg();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_usb_tests_post_test_hook()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>post<sp/>hook<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Basic<sp/>init<sp/>should<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_usb_test_init()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status<sp/>=<sp/><ref refid="group__ns-usb_1ga0771febd668bd46beb762a864f5ae521" kindref="member">ns_usb_init</ref>(&amp;cfg,<sp/>&amp;handle);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(NS_STATUS_SUCCESS,<sp/>status);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Null<sp/>config<sp/>should<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_usb_test_init_null_config()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status<sp/>=<sp/><ref refid="group__ns-usb_1ga0771febd668bd46beb762a864f5ae521" kindref="member">ns_usb_init</ref>(NULL,<sp/>&amp;handle);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(NS_STATUS_INVALID_HANDLE,<sp/>status);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Null<sp/>rx<sp/>and<sp/>tx<sp/>buffer<sp/>should<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_usb_test_init_null_buffers()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_usb_cfg();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1ad0ba03a344422896457d383a1b639430" kindref="member">rx_buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1a94c0d9c156f1eaaeb6d317a4670758be" kindref="member">tx_buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status<sp/>=<sp/><ref refid="group__ns-usb_1ga0771febd668bd46beb762a864f5ae521" kindref="member">ns_usb_init</ref>(&amp;cfg,<sp/>&amp;handle);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(NS_STATUS_INVALID_CONFIG,<sp/>status);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Invalid<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_usb_test_init_invalid_api()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_usb_cfg();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ns_core_api_t<sp/>invalid_api<sp/>=<sp/>{.apiId<sp/>=<sp/>0xFFFFF,<sp/>.version<sp/>=<sp/>NS_USB_V0_0_1};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.<ref refid="structns__usb__config__t_1aabcd9dc7d127647a2cb021e31704b855" kindref="member">api</ref><sp/>=<sp/>&amp;invalid_api;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status<sp/>=<sp/><ref refid="group__ns-usb_1ga0771febd668bd46beb762a864f5ae521" kindref="member">ns_usb_init</ref>(&amp;cfg,<sp/>&amp;handle);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_ASSERT_EQUAL(NS_STATUS_INVALID_VERSION,<sp/>status);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-usb/tests/ns_usb_tests.c"/>
  </compounddef>
</doxygen>
