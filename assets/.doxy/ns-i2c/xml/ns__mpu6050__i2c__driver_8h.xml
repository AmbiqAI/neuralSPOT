<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ns__mpu6050__i2c__driver_8h" kind="file" language="C++">
    <compoundname>ns_mpu6050_i2c_driver.h</compoundname>
    <includes local="yes">am_bsp.h</includes>
    <includes local="yes">am_mcu_apollo.h</includes>
    <includes refid="ns__i2c_8h" local="yes">ns_i2c.h</includes>
    <includedby refid="ns__mpu6050__i2c__driver_8c" local="yes">neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>ns_i2c.h</label>
        <link refid="ns__i2c_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h</label>
        <link refid="ns__mpu6050__i2c__driver_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>am_bsp.h</label>
      </node>
      <node id="3">
        <label>am_mcu_apollo.h</label>
      </node>
      <node id="5">
        <label>am_util.h</label>
      </node>
      <node id="6">
        <label>ns_core.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmpu6050__fifo__config__t" prot="public">mpu6050_fifo_config_t</innerclass>
    <innerclass refid="structmpu6050__int__config__t" prot="public">mpu6050_int_config_t</innerclass>
    <innerclass refid="structmpu6050__config__t" prot="public">mpu6050_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ns-_m_p_u6050_1ga0b927eb126b057787f7d6b133847a3ad" prot="public" static="no">
        <name>MPU_I2CADDRESS_AD0_LOW</name>
        <initializer>0x68</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="88" column="9" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ns-_m_p_u6050_1ga69fe5c834d4202830573d8ec55a7c0d8" prot="public" static="no">
        <name>MPU_I2CADDRESS_AD0_HIGH</name>
        <initializer>0x69</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="89" column="9" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ns-_m_p_u6050_1gac472d14ed35a15b59182459f0d55509e" prot="public" static="no" strong="no">
        <type></type>
        <name>mpu6050_status_e</name>
        <enumvalue id="group__ns-_m_p_u6050_1ggac472d14ed35a15b59182459f0d55509ea94bfc7f21070a5d3f36cfed689872676" prot="public">
          <name>MPU6050_STATUS_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggac472d14ed35a15b59182459f0d55509ea099f7468ee2ef213b5b81a44c4e3ab74" prot="public">
          <name>MPU6050_STATUS_ERROR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="26" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="enum" id="group__ns-_m_p_u6050_1gaec0667e9311180ae3f72cabb416c7b2b" prot="public" static="no" strong="no">
        <type></type>
        <name>mpu6050_dlpf_cfg_t</name>
        <enumvalue id="group__ns-_m_p_u6050_1ggaec0667e9311180ae3f72cabb416c7b2ba9bcfeb46d3f9e100db4e642e3c33b649" prot="public">
          <name>DLPF_260HZ</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaec0667e9311180ae3f72cabb416c7b2ba3a04bbf191436af2cd888119eaadcb4e" prot="public">
          <name>DLPF_184HZ</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaec0667e9311180ae3f72cabb416c7b2bacecf80c4b2da6f2b54e78f2018e6b306" prot="public">
          <name>DLPF_094HZ</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaec0667e9311180ae3f72cabb416c7b2bacbec79f346830d0c9f5fd0ec09442e45" prot="public">
          <name>DLPF_044HZ</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaec0667e9311180ae3f72cabb416c7b2ba490d858f2d96372d7593e51b5afae196" prot="public">
          <name>DLPF_021HZ</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaec0667e9311180ae3f72cabb416c7b2ba6e1166ee491270a24ff21929855ba6f8" prot="public">
          <name>DLPF_010HZ</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaec0667e9311180ae3f72cabb416c7b2ba2b1a84a05df70c7099f4966e24fee1e6" prot="public">
          <name>DLPF_005HZ</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="28" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" prot="public" static="no" strong="no">
        <type></type>
        <name>mpu6050_gyro_fs_t</name>
        <enumvalue id="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da13a506e5980394eef0c9efa8de2b3f65" prot="public">
          <name>GYRO_FS_250DPS</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>+/- 250 º/s -&gt; 131 LSB/(º/s) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da620762917758cd41d56958e76191c28c" prot="public">
          <name>GYRO_FS_500DPS</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>+/- 500 º/s -&gt; 65.5 LSB/(º/s) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da259e99cd576941911266076adaff31f8" prot="public">
          <name>GYRO_FS_1000DPS</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>+/- 1000 º/s -&gt; 32.8 LSB/(º/s) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da13877729d71c8805aea6041e0b6ba5e8" prot="public">
          <name>GYRO_FS_2000DPS</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>+/- 2000 º/s -&gt; 16.4 LSB/(º/s) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gyroscope full-scale range </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="40" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="enum" id="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" prot="public" static="no" strong="no">
        <type></type>
        <name>mpu6050_accel_fs_t</name>
        <enumvalue id="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44a5a3cf1b9e75e22daa08706f7f2c888b2" prot="public">
          <name>ACCEL_FS_2G</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>+/- 2 g -&gt; 16384 LSB/g </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44afea1f6dcc4e646d38c24d2fd4f64e547" prot="public">
          <name>ACCEL_FS_4G</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>+/- 4 g -&gt; 8192 LSB/g </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44a022d470e233f2772adce7a506cb26e62" prot="public">
          <name>ACCEL_FS_8G</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>+/- 8 g -&gt; 4096 LSB/g </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44af2eb87f211db3efbed34333935f710a9" prot="public">
          <name>ACCEL_FS_16G</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>+/- 16 g -&gt; 2048 LSB/g </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accel full-scale range </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="48" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="group__ns-_m_p_u6050_1gaa79598704e9063ad2dd263221cdb69fc" prot="public" static="no" strong="no">
        <type></type>
        <name>mpu6050_clock_src_t</name>
        <enumvalue id="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fca8bdec1634c9e8e37a678c5a12f87df78" prot="public">
          <name>CLOCK_INTERNAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fcadcc6b86c5e61b7208ed7f6c5a755ab28" prot="public">
          <name>CLOCK_GX_PLL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fca8a7c26168e3d70ed680925b9db378a7c" prot="public">
          <name>CLOCK_GY_PLL</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fca3aca2e7d45a163796d0879cb5612ffff" prot="public">
          <name>CLOCK_GZ_PLL</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fca4c9f3f95725452f8610e0e70f779bf8e" prot="public">
          <name>CLOCK_32_REF</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fca8f9e80ba1ac37a3bd4df39d9f2d29bcd" prot="public">
          <name>CLOCK_19_REF</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fcab1c7ec78efae2310aa35221cbe2682ad" prot="public">
          <name>CLOCK_KEEP_RESET</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>Stops the clock and keeps timing generator in reset. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clock selection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="56" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" bodystart="56" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga403512b9e2cda535ec37855a474b235a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_sample_rate_divider</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t divider)</argsstring>
        <name>mpu6050_set_sample_rate_divider</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>divider</declname>
        </param>
        <briefdescription>
<para>Set sample rate divider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>divider</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate divider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="108" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="302" bodyend="304" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="108" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga6fd6abe5676f82ef051426d1760813ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_sample_rate</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint16_t rate)</argsstring>
        <name>mpu6050_set_sample_rate</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set target sample rate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Target rate in Hz </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="118" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="315" bodyend="320" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="118" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gaf02cf4c293cc2d57960e4f115ac9a507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_lowpass_filter</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, mpu6050_dlpf_cfg_t value)</argsstring>
        <name>mpu6050_set_lowpass_filter</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>mpu6050_dlpf_cfg_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set digital lowpass filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="129" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="331" bodyend="333" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="129" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gae1b4f3fc724c05bd249f017725555f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_gyro_full_scale</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, mpu6050_gyro_fs_t fsr)</argsstring>
        <name>mpu6050_set_gyro_full_scale</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref></type>
          <declname>fsr</declname>
        </param>
        <briefdescription>
<para>Set gyro full scale range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fsr</parametername>
</parameternamelist>
<parameterdescription>
<para>Full scale range selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="139" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="344" bodyend="346" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="139" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gae81c5c400a231c018882f6d2a2e696f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_accel_full_scale</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, mpu6050_accel_fs_t fsr)</argsstring>
        <name>mpu6050_set_accel_full_scale</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref></type>
          <declname>fsr</declname>
        </param>
        <briefdescription>
<para>Set accel full scale range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fsr</parametername>
</parameternamelist>
<parameterdescription>
<para>Full scale range selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="150" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="357" bodyend="359" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="150" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga9534a9eac204a49a1702454a6e09ab34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_configure_fifo</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, mpu6050_fifo_config_t *fifoConfig)</argsstring>
        <name>mpu6050_configure_fifo</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type><ref refid="structmpu6050__fifo__config__t" kindref="compound">mpu6050_fifo_config_t</ref> *</type>
          <declname>fifoConfig</declname>
        </param>
        <briefdescription>
<para>Configure FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fifoConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>FIFO configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="161" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="370" bodyend="381" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="161" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gab3cc4df8c7ea260b837487829b9d6b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_fifo_enable</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t enable)</argsstring>
        <name>mpu6050_set_fifo_enable</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable FIFO flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="171" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="392" bodyend="394" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="171" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga4864812b0d314614be2092c308e21b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_reset_fifo</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr)</argsstring>
        <name>mpu6050_reset_fifo</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <briefdescription>
<para>Reset FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="180" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="404" bodyend="406" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="180" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga0d9e265c66c7b0273ac35fcfde6bf3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_get_fifo_count</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint16_t *count)</argsstring>
        <name>mpu6050_get_fifo_count</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Get FIFO count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="190" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="417" bodyend="422" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="190" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga9c5e55569717453367926f558ce54c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_fifo_pop</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, int16_t *value)</argsstring>
        <name>mpu6050_fifo_pop</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Pop next value from FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FIFO value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="200" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="433" bodyend="438" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="200" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga0f87ac84c753cdeaefbdbb5d7ab94c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_configure_interrupt</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, mpu6050_int_config_t *intConfig)</argsstring>
        <name>mpu6050_configure_interrupt</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type><ref refid="structmpu6050__int__config__t" kindref="compound">mpu6050_int_config_t</ref> *</type>
          <declname>intConfig</declname>
        </param>
        <briefdescription>
<para>Configure interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="210" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="449" bodyend="459" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="210" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga886a70eb2c27921b90fa244280372aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_interrupt_enable</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t overflowEnable, uint8_t dataReadyEnable)</argsstring>
        <name>mpu6050_set_interrupt_enable</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>overflowEnable</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dataReadyEnable</declname>
        </param>
        <briefdescription>
<para>Enable/disable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>overflowEnable</parametername>
</parameternamelist>
<parameterdescription>
<para>Overflow triggers interrupt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataReadyEnable</parametername>
</parameternamelist>
<parameterdescription>
<para>Data ready triggers interrupt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="222" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="471" bodyend="475" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="222" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga5f95553d66ffe02905246c77c8b3c598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_get_interrupt_status</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t *status)</argsstring>
        <name>mpu6050_get_interrupt_status</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Get interrupt status register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store status register </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="233" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="486" bodyend="488" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="233" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gad8e8fdabfef9c497c3aeeb0b0cb4a4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_reset_signal_paths</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr)</argsstring>
        <name>mpu6050_reset_signal_paths</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <briefdescription>
<para>Reset signal paths. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="242" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="498" bodyend="500" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="242" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga69c978d5085bff211edb619e9b657ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_reset_signal_conds</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr)</argsstring>
        <name>mpu6050_reset_signal_conds</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <briefdescription>
<para>Reset signal conditions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="251" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="510" bodyend="512" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="251" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga60685a3ce63c0c1d99c1ccc123ba2495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_get_accel_values</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, int16_t *x, int16_t *y, int16_t *z)</argsstring>
        <name>mpu6050_get_accel_values</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Get current acceleration values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store x axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="263" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="525" bodyend="535" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="263" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gaa2f87758cb3946067b29957635c471c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_get_gyro_values</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, int16_t *x, int16_t *y, int16_t *z)</argsstring>
        <name>mpu6050_get_gyro_values</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Get current gyro values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store x axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store y axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store z axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="277" column="1" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="548" bodyend="558" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="277" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gaec7ef0ff7a3b0e38896534363b8b04e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_get_temperature</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, int16_t *t)</argsstring>
        <name>mpu6050_get_temperature</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get current temperature value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store Temperature </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="287" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="569" bodyend="574" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="287" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gabd01e5373f38fe7b9316767ecaa848a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_sleep</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t sleep)</argsstring>
        <name>mpu6050_set_sleep</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sleep</declname>
        </param>
        <briefdescription>
<para>Enable/disable sleep mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sleep</parametername>
</parameternamelist>
<parameterdescription>
<para>Sleep flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="297" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="585" bodyend="587" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="297" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gafabe4da1079ce1bb301cc5d2f5fa1bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_temperature_disable</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t disable)</argsstring>
        <name>mpu6050_set_temperature_disable</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>disable</declname>
        </param>
        <briefdescription>
<para>Disable temperature readings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>disable</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable temperature flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="307" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="598" bodyend="600" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="307" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga2e5adc266ac375c7e57163a44e9eccf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_test_connection</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr)</argsstring>
        <name>mpu6050_test_connection</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <briefdescription>
<para>Verify device by reading WHO_AM_I register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="316" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="610" bodyend="616" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="316" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gab4ff3e24654cef5ac81befa290eca934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_lowpower_accel_mode</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t wakeFreq)</argsstring>
        <name>mpu6050_set_lowpower_accel_mode</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>wakeFreq</declname>
        </param>
        <briefdescription>
<para>Put device into low-power acceleration-only mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wakeFreq</parametername>
</parameternamelist>
<parameterdescription>
<para>Wake-up frequency 0=1.25Hz, 1=5Hz 2=20Hz 3=40Hz </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="326" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="627" bodyend="633" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="326" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga6fa95e13a98f11d59718e5425c14502c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_device_reset</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr)</argsstring>
        <name>mpu6050_device_reset</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <briefdescription>
<para>Hard reset device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="335" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="643" bodyend="653" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="335" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gadec9c371ad5ce995a6f2007000014511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_clock_source</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, mpu6050_clock_src_t sel)</argsstring>
        <name>mpu6050_set_clock_source</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type><ref refid="group__ns-_m_p_u6050_1gaa79598704e9063ad2dd263221cdb69fc" kindref="member">mpu6050_clock_src_t</ref></type>
          <declname>sel</declname>
        </param>
        <briefdescription>
<para>Set clock source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sel</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="345" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="664" bodyend="666" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="345" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga7200307da54045f6afb7ee9350a0ac73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_read_sensors</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t *buffer)</argsstring>
        <name>mpu6050_read_sensors</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Reads MPU sensor values (3-axis accel, 1 temp, 3-axis gyro) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>14-byte buffer to store values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="355" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="677" bodyend="682" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="355" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gacfb3352925b38066b2c0030917ee6eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_accel_fsr_value</definition>
        <argsstring>(mpu6050_accel_fs_t range)</argsstring>
        <name>mpu6050_accel_fsr_value</name>
        <param>
          <type><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Acceleration scale in units of G. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>Full scale range selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Scale in G </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="363" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="691" bodyend="693" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="363" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gabe293988adfbefd2672c65682d908880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mpu6050_accel_resolution</definition>
        <argsstring>(mpu6050_accel_fs_t range)</argsstring>
        <name>mpu6050_accel_resolution</name>
        <param>
          <type><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Acceleration scale LSB resolution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>Full scale range selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Resolution (G) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="371" column="7" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="702" bodyend="704" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="371" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gac14b0548ec8e2b444f0417e1a79a8ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mpu6050_accel_to_gravity</definition>
        <argsstring>(int16_t val, mpu6050_accel_fs_t range)</argsstring>
        <name>mpu6050_accel_to_gravity</name>
        <param>
          <type>int16_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Convert acceleration value to G. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Accel register value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>Full-scale range used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Acceleration (G) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="380" column="7" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="736" bodyend="738" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="380" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gaeceacdec42871639cc2dd74ba152f2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mpu6050_temperature_to_celsius</definition>
        <argsstring>(int16_t val)</argsstring>
        <name>mpu6050_temperature_to_celsius</name>
        <param>
          <type>int16_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Convert temperature value to Celsius. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Temperature register </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Temperature (°C) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="388" column="7" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="747" bodyend="749" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="388" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gaa998efeb9a2adcc7d100623777843c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_gyro_fsr_value</definition>
        <argsstring>(const mpu6050_gyro_fs_t range)</argsstring>
        <name>mpu6050_gyro_fsr_value</name>
        <param>
          <type>const <ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Gyroscope scale in units dps. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>Full scale range selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Scale (°/s) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="396" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="713" bodyend="715" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="396" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gadb4795fdfc538f7454e64a513c28c9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mpu6050_gyro_resolution</definition>
        <argsstring>(const mpu6050_gyro_fs_t range)</argsstring>
        <name>mpu6050_gyro_resolution</name>
        <param>
          <type>const <ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Gyroscope scale LSB resolution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>Full scale range selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Resolution (°/s) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="404" column="7" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="724" bodyend="726" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="404" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gab7389c070e9ea30f58f4aade2969c91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float mpu6050_gyro_to_deg_per_sec</definition>
        <argsstring>(int val, mpu6050_gyro_fs_t range)</argsstring>
        <name>mpu6050_gyro_to_deg_per_sec</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Convert gyroscope value to degrees/second. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Gyroscope register value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>Full-scale range used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float Gyroscope (°/s) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="413" column="7" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="759" bodyend="761" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="413" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga4594a05e733711f0461b15ad7dec82d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_accel_offset</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t axis, int offset)</argsstring>
        <name>mpu6050_set_accel_offset</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Set acceleration offset for axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>x=0, y=1, z=2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="424" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="773" bodyend="787" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="424" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga7d9c5eaa5266f28c4c57435fb1ca3965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_set_gyro_offset</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, uint8_t axis, int offset)</argsstring>
        <name>mpu6050_set_gyro_offset</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Set gyroscope offset for axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>x=0, y=1, z=2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="435" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="799" bodyend="803" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="435" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1ga3ff2a549b8604e615fd4c34be92b7de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_mean_sensors</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr, int *meanAX, int *meanAY, int *meanAZ, int *meanGX, int *meanGY, int *meanGZ)</argsstring>
        <name>mpu6050_mean_sensors</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meanAX</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meanAY</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meanAZ</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meanGX</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meanGY</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meanGZ</declname>
        </param>
        <briefdescription>
<para>Get average sensor values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanAX</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store mean X accel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanAY</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store mean Y accel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanAZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store mean Z accel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanGX</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store mean X gyro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanGY</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store mean Y gyro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanGZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store mean Z gyro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="450" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="819" bodyend="854" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="450" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gae4debdf60fa0bd51c279b63f446bdabf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_calibrate</definition>
        <argsstring>(ns_i2c_config_t *cfg, uint32_t devAddr)</argsstring>
        <name>mpu6050_calibrate</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <briefdescription>
<para>Calibrate device offsets. Device must be still on a flat surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status</para>
</simplesect>
Calibrate device offsets. Device must be still on a flat surface.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Device I2C address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="461" column="10" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="887" bodyend="942" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="461" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ns-_m_p_u6050_1gabdbfab0e20adca96fa04913abfec1f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t mpu6050_init</definition>
        <argsstring>(ns_i2c_config_t *cfg, mpu6050_config_t *c, uint32_t devAddr)</argsstring>
        <name>mpu6050_init</name>
        <param>
          <type><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="structmpu6050__config__t" kindref="compound">mpu6050_config_t</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>devAddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" line="463" column="17" bodyfile="neuralSPOT/neuralspot/ns-i2c/src/ns_mpu6050_i2c_driver.c" bodystart="961" bodyend="973" declfile="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h" declline="463" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple driver for Invensense MPU6050. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Adam Page </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2022-09-02</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NS_MPU6050</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_MPU6050</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;am_bsp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;am_mcu_apollo.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ns__i2c_8h" kindref="compound">ns_i2c.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>MPU6050_STATUS_SUCCESS<sp/>=<sp/>0,<sp/>MPU6050_STATUS_ERROR<sp/>=<sp/>1<sp/>}<sp/>mpu6050_status_e;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>DLPF_260HZ<sp/>=<sp/>0,<sp/></highlight><highlight class="comment">//<sp/>Accel:<sp/>260<sp/>Hz,<sp/>Gyro:<sp/>256<sp/>Hz,<sp/>Delay:<sp/>1<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>DLPF_184HZ<sp/>=<sp/>1,<sp/></highlight><highlight class="comment">//<sp/>Accel:<sp/>184<sp/>Hz,<sp/>Gyro:<sp/>188<sp/>Hz,<sp/>Delay:<sp/>2<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>DLPF_094HZ<sp/>=<sp/>2,<sp/></highlight><highlight class="comment">//<sp/>Accel:<sp/><sp/>94<sp/>Hz,<sp/>Gyro:<sp/><sp/>98<sp/>Hz,<sp/>Delay:<sp/>3<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>DLPF_044HZ<sp/>=<sp/>3,<sp/></highlight><highlight class="comment">//<sp/>Accel:<sp/><sp/>44<sp/>Hz,<sp/>Gyro:<sp/><sp/>42<sp/>Hz,<sp/>Delay:<sp/>5<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>DLPF_021HZ<sp/>=<sp/>4,<sp/></highlight><highlight class="comment">//<sp/>Accel:<sp/><sp/>21<sp/>Hz,<sp/>Gyro:<sp/><sp/>20<sp/>Hz,<sp/>Delay:<sp/>9<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>DLPF_010HZ<sp/>=<sp/>5,<sp/></highlight><highlight class="comment">//<sp/>Accel:<sp/><sp/>10<sp/>Hz,<sp/>Gyro:<sp/><sp/>10<sp/>Hz,<sp/>Delay:<sp/>14<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>DLPF_005HZ<sp/>=<sp/>6,<sp/></highlight><highlight class="comment">//<sp/>Accel:<sp/><sp/><sp/>5<sp/>Hz,<sp/>Gyro:<sp/><sp/><sp/>5<sp/>Hz,<sp/>Delay:<sp/>19<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/>mpu6050_dlpf_cfg_t;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41" refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da13a506e5980394eef0c9efa8de2b3f65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da13a506e5980394eef0c9efa8de2b3f65" kindref="member">GYRO_FS_250DPS</ref><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da620762917758cd41d56958e76191c28c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da620762917758cd41d56958e76191c28c" kindref="member">GYRO_FS_500DPS</ref><sp/>=<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da259e99cd576941911266076adaff31f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da259e99cd576941911266076adaff31f8" kindref="member">GYRO_FS_1000DPS</ref><sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da13877729d71c8805aea6041e0b6ba5e8" kindref="member">GYRO_FS_2000DPS</ref><sp/>=<sp/>3<sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="group__ns-_m_p_u6050_1ggab4dbc4e43855395ed81f8bdc8841c27da13877729d71c8805aea6041e0b6ba5e8" refkind="member"><highlight class="normal">}<sp/><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49" refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44a5a3cf1b9e75e22daa08706f7f2c888b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44a5a3cf1b9e75e22daa08706f7f2c888b2" kindref="member">ACCEL_FS_2G</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="50" refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44afea1f6dcc4e646d38c24d2fd4f64e547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44afea1f6dcc4e646d38c24d2fd4f64e547" kindref="member">ACCEL_FS_4G</ref><sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="51" refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44a022d470e233f2772adce7a506cb26e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44a022d470e233f2772adce7a506cb26e62" kindref="member">ACCEL_FS_8G</ref><sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44af2eb87f211db3efbed34333935f710a9" kindref="member">ACCEL_FS_16G</ref><sp/>=<sp/>3<sp/></highlight></codeline>
<codeline lineno="53" refid="group__ns-_m_p_u6050_1ggac47e841b4e2b1db2d675c252e6637b44af2eb87f211db3efbed34333935f710a9" refkind="member"><highlight class="normal">}<sp/><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__ns-_m_p_u6050_1gaa79598704e9063ad2dd263221cdb69fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>CLOCK_INTERNAL<sp/>=<sp/>0,<sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>oscillator:<sp/>20MHz<sp/>for<sp/>MPU6500<sp/>and<sp/>8MHz<sp/>for<sp/>MPU6050</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>CLOCK_GX_PLL<sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyroscope<sp/>x<sp/>axis<sp/>PLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>CLOCK_GY_PLL<sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyroscope<sp/>y<sp/>axis<sp/>PLL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>CLOCK_GZ_PLL<sp/>=<sp/>3,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyroscope<sp/>y<sp/>axis<sp/>PLL<sp/>(recommended)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>CLOCK_32_REF<sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PLL<sp/>with<sp/>external<sp/>32.768kHz<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>CLOCK_19_REF<sp/>=<sp/>5,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PLL<sp/>with<sp/>external<sp/>19.2MHz<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fcab1c7ec78efae2310aa35221cbe2682ad" kindref="member">CLOCK_KEEP_RESET</ref><sp/>=<sp/>7<sp/></highlight></codeline>
<codeline lineno="64" refid="group__ns-_m_p_u6050_1ggaa79598704e9063ad2dd263221cdb69fcab1c7ec78efae2310aa35221cbe2682ad" refkind="member"><highlight class="normal">}<sp/><ref refid="group__ns-_m_p_u6050_1gaa79598704e9063ad2dd263221cdb69fc" kindref="member">mpu6050_clock_src_t</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structmpu6050__fifo__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tempEnable;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>xgEnable;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ygEnable;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>zgEnable;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>accelEnable;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>slv2Enable;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>slv1Enable;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>slv0Enable;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/><ref refid="structmpu6050__fifo__config__t" kindref="compound">mpu6050_fifo_config_t</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structmpu6050__int__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>intLevel;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>intOpen;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>latchEnable;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rdClear;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fsyncLevel;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fsyncEnable;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><ref refid="structmpu6050__int__config__t" kindref="compound">mpu6050_int_config_t</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_I2CADDRESS_AD0_LOW<sp/>0x68</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MPU_I2CADDRESS_AD0_HIGH<sp/>0x69</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structmpu6050__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1gaa79598704e9063ad2dd263221cdb69fc" kindref="member">mpu6050_clock_src_t</ref><sp/>clock_src;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu6050_dlpf_cfg_t<sp/>dlpf_cfg;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref><sp/>gyro_fullscale_range;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref><sp/>accel_fullscale_range;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>sample_rate;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>sleep_cfg;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/><ref refid="structmpu6050__config__t" kindref="compound">mpu6050_config_t</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga403512b9e2cda535ec37855a474b235a" kindref="member">mpu6050_set_sample_rate_divider</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>divider);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga6fd6abe5676f82ef051426d1760813ce" kindref="member">mpu6050_set_sample_rate</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint16_t<sp/>rate);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="group__ns-_m_p_u6050_1gaf02cf4c293cc2d57960e4f115ac9a507" kindref="member">mpu6050_set_lowpass_filter</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>mpu6050_dlpf_cfg_t<sp/>value);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gae1b4f3fc724c05bd249f017725555f14" kindref="member">mpu6050_set_gyro_full_scale</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref><sp/>fsr);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="group__ns-_m_p_u6050_1gae81c5c400a231c018882f6d2a2e696f7" kindref="member">mpu6050_set_accel_full_scale</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref><sp/>fsr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="group__ns-_m_p_u6050_1ga9534a9eac204a49a1702454a6e09ab34" kindref="member">mpu6050_configure_fifo</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/><ref refid="structmpu6050__fifo__config__t" kindref="compound">mpu6050_fifo_config_t</ref><sp/>*fifoConfig);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gab3cc4df8c7ea260b837487829b9d6b46" kindref="member">mpu6050_set_fifo_enable</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>enable);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga4864812b0d314614be2092c308e21b00" kindref="member">mpu6050_reset_fifo</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga0d9e265c66c7b0273ac35fcfde6bf3af" kindref="member">mpu6050_get_fifo_count</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint16_t<sp/>*count);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga9c5e55569717453367926f558ce54c8d" kindref="member">mpu6050_fifo_pop</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>int16_t<sp/>*value);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga0f87ac84c753cdeaefbdbb5d7ab94c0d" kindref="member">mpu6050_configure_interrupt</ref>(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/><ref refid="structmpu6050__int__config__t" kindref="compound">mpu6050_int_config_t</ref><sp/>*intConfig);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga886a70eb2c27921b90fa244280372aca" kindref="member">mpu6050_set_interrupt_enable</ref>(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>overflowEnable,<sp/>uint8_t<sp/>dataReadyEnable);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga5f95553d66ffe02905246c77c8b3c598" kindref="member">mpu6050_get_interrupt_status</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>*status);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gad8e8fdabfef9c497c3aeeb0b0cb4a4e8" kindref="member">mpu6050_reset_signal_paths</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga69c978d5085bff211edb619e9b657ac8" kindref="member">mpu6050_reset_signal_conds</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga60685a3ce63c0c1d99c1ccc123ba2495" kindref="member">mpu6050_get_accel_values</ref>(</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>int16_t<sp/>*x,<sp/>int16_t<sp/>*y,<sp/>int16_t<sp/>*z);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">uint32_t</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="group__ns-_m_p_u6050_1gaa2f87758cb3946067b29957635c471c7" kindref="member">mpu6050_get_gyro_values</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>int16_t<sp/>*x,<sp/>int16_t<sp/>*y,<sp/>int16_t<sp/>*z);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gaec7ef0ff7a3b0e38896534363b8b04e0" kindref="member">mpu6050_get_temperature</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>int16_t<sp/>*t);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gabd01e5373f38fe7b9316767ecaa848a7" kindref="member">mpu6050_set_sleep</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>sleep);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gafabe4da1079ce1bb301cc5d2f5fa1bfb" kindref="member">mpu6050_set_temperature_disable</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>disable);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga2e5adc266ac375c7e57163a44e9eccf8" kindref="member">mpu6050_test_connection</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gab4ff3e24654cef5ac81befa290eca934" kindref="member">mpu6050_set_lowpower_accel_mode</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>wakeFreq);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga6fa95e13a98f11d59718e5425c14502c" kindref="member">mpu6050_device_reset</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gadec9c371ad5ce995a6f2007000014511" kindref="member">mpu6050_set_clock_source</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/><ref refid="group__ns-_m_p_u6050_1gaa79598704e9063ad2dd263221cdb69fc" kindref="member">mpu6050_clock_src_t</ref><sp/>sel);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga7200307da54045f6afb7ee9350a0ac73" kindref="member">mpu6050_read_sensors</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>*buffer);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gacfb3352925b38066b2c0030917ee6eae" kindref="member">mpu6050_accel_fsr_value</ref>(<ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref><sp/>range);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__ns-_m_p_u6050_1gabe293988adfbefd2672c65682d908880" kindref="member">mpu6050_accel_resolution</ref>(<ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref><sp/>range);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__ns-_m_p_u6050_1gac14b0548ec8e2b444f0417e1a79a8ad6" kindref="member">mpu6050_accel_to_gravity</ref>(int16_t<sp/>val,<sp/><ref refid="group__ns-_m_p_u6050_1gac47e841b4e2b1db2d675c252e6637b44" kindref="member">mpu6050_accel_fs_t</ref><sp/>range);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__ns-_m_p_u6050_1gaeceacdec42871639cc2dd74ba152f2f7" kindref="member">mpu6050_temperature_to_celsius</ref>(int16_t<sp/>val);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gaa998efeb9a2adcc7d100623777843c54" kindref="member">mpu6050_gyro_fsr_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref><sp/>range);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__ns-_m_p_u6050_1gadb4795fdfc538f7454e64a513c28c9c0" kindref="member">mpu6050_gyro_resolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref><sp/>range);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__ns-_m_p_u6050_1gab7389c070e9ea30f58f4aade2969c91e" kindref="member">mpu6050_gyro_to_deg_per_sec</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val,<sp/><ref refid="group__ns-_m_p_u6050_1gab4dbc4e43855395ed81f8bdc8841c27d" kindref="member">mpu6050_gyro_fs_t</ref><sp/>range);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga4594a05e733711f0461b15ad7dec82d1" kindref="member">mpu6050_set_accel_offset</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>axis,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga7d9c5eaa5266f28c4c57435fb1ca3965" kindref="member">mpu6050_set_gyro_offset</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/>uint8_t<sp/>axis,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1ga3ff2a549b8604e615fd4c34be92b7de2" kindref="member">mpu6050_mean_sensors</ref>(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*meanAX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*meanAY,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*meanAZ,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*meanGX,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*meanGY,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*meanGZ);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">uint32_t<sp/><ref refid="group__ns-_m_p_u6050_1gae4debdf60fa0bd51c279b63f446bdabf" kindref="member">mpu6050_calibrate</ref>(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>devAddr);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/>mpu6050_init(<ref refid="structns__i2c__config__t" kindref="compound">ns_i2c_config_t</ref><sp/>*cfg,<sp/><ref refid="structmpu6050__config__t" kindref="compound">mpu6050_config_t</ref><sp/>*c,<sp/>uint32_t<sp/>devAddr);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NS_MPU6050</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-i2c/includes-api/ns_mpu6050_i2c_driver.h"/>
  </compounddef>
</doxygen>
