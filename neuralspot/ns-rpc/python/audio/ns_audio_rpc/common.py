#@file ns-audio-rpc.erpc
#
# @brief Interface definition for neuralspot audio RPC
#
#

#
# Generated by erpcgen 1.9.1 on Thu Aug 25 16:33:20 2022.
#
# AUTOGENERATED - DO NOT EDIT
#


# Constant variable declarations
max_audio_buffer_length = 1024

# Enumerators data types declarations
class nsAudioStatus_e:
    nsAudioRPCStatus_success = 0
    nsAudioRPCStatus_failure = 1

class nsAudioAction_e:
    nsAudioPlayAudio = 0
    nsAudioDisplayAudio = 1
    nsAudioAppendToAudioFile = 2


# Structures data types declarations
class nsAudioBuffer_t(object):
    def __init__(self, bufferLength=None, buf=None):
        self.bufferLength = bufferLength # uint32
        self.buf = buf # binary

    def _read(self, codec):
        self.bufferLength = codec.read_uint32()
        self.buf = codec.read_binary()
        return self

    def _write(self, codec):
        if self.bufferLength is None:
            raise ValueError("bufferLength is None")
        codec.write_uint32(self.bufferLength)
        if self.buf is None:
            raise ValueError("buf is None")
        codec.write_binary(self.buf)

    def __str__(self):
        return "<%s@%x bufferLength=%s buf=%s>" % (self.__class__.__name__, id(self), self.bufferLength, self.buf)

    def __repr__(self):
        return self.__str__()

class audioCommand_t(object):
    def __init__(self, cmd=None, buf=None):
        self.cmd = cmd # nsAudioAction_e
        self.buf = buf # nsAudioBuffer_t

    def _read(self, codec):
        self.cmd = codec.read_uint32()
        self.buf = nsAudioBuffer_t()._read(codec)
        return self

    def _write(self, codec):
        if self.cmd is None:
            raise ValueError("cmd is None")
        codec.write_uint32(self.cmd)
        if self.buf is None:
            raise ValueError("buf is None")
        self.buf._write(codec)

    def __str__(self):
        return "<%s@%x cmd=%s buf=%s>" % (self.__class__.__name__, id(self), self.cmd, self.buf)

    def __repr__(self):
        return self.__str__()

