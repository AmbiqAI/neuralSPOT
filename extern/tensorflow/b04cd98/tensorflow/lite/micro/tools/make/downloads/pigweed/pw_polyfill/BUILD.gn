# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/target_types.gni")
import("$dir_pw_docgen/docs.gni")
import("$dir_pw_unit_test/test.gni")

config("public") {
  include_dirs = [ "public" ]
  visibility = [ ":*" ]
}

pw_source_set("pw_polyfill") {
  public_configs = [ ":public" ]
  remove_public_deps = [ "*" ]
  public_deps = [ ":standard_library" ]
  public = [
    "public/pw_polyfill/language_feature_macros.h",
    "public/pw_polyfill/standard.h",
  ]
}

config("overrides_config") {
  include_dirs = [ "public_overrides" ]
  cflags_cc = [
    # Use -include to include the language features header in dependent files,
    # without requiring a #include. This allows the use of newer C++ language
    # features in older C++ versions without an explicit include.
    "-include",
    rebase_path("language_features.h"),
  ]
  visibility = [ ":*" ]
}

pw_source_set("overrides") {
  public_configs = [ ":overrides_config" ]
  remove_public_deps = [ "*" ]
  public_deps = [ ":standard_library" ]
  inputs = [
    "public_overrides/array",
    "public_overrides/assert.h",
    "public_overrides/bit",
    "public_overrides/cstddef",
    "public_overrides/iterator",
    "public_overrides/type_traits",
    "public_overrides/utility",
  ]
  sources = [ "language_features.h" ]
}

config("standard_library_public") {
  include_dirs = [ "standard_library_public" ]
}

pw_source_set("standard_library") {
  public_configs = [ ":standard_library_public" ]
  remove_public_deps = [ "*" ]
  public = [
    "standard_library_public/pw_polyfill/standard_library/array.h",
    "standard_library_public/pw_polyfill/standard_library/assert.h",
    "standard_library_public/pw_polyfill/standard_library/bit.h",
    "standard_library_public/pw_polyfill/standard_library/cstddef.h",
    "standard_library_public/pw_polyfill/standard_library/iterator.h",
    "standard_library_public/pw_polyfill/standard_library/namespace.h",
    "standard_library_public/pw_polyfill/standard_library/type_traits.h",
    "standard_library_public/pw_polyfill/standard_library/utility.h",
  ]
  visibility = [
    ":overrides",
    ":pw_polyfill",
  ]
}

pw_test_group("tests") {
  tests = [
    ":default_cpp_test",
    ":cpp11_test",
    ":cpp14_test",
  ]
}

pw_test("default_cpp_test") {
  deps = [ ":pw_polyfill" ]
  sources = [ "test.cc" ]
}

pw_test("cpp11_test") {
  remove_configs = [ "$dir_pw_build:cpp17" ]
  configs = [ "$dir_pw_build:cpp11" ]
  sources = [ "test.cc" ]
  deps = [ ":pw_polyfill" ]
}

pw_test("cpp14_test") {
  remove_configs = [ "$dir_pw_build:cpp17" ]
  configs = [ "$dir_pw_build:cpp14" ]
  sources = [ "test.cc" ]
  deps = [ ":pw_polyfill" ]
}

pw_doc_group("docs") {
  sources = [ "docs.rst" ]
}
