<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="ns__malloc__tests_8h" kind="file" language="C++">
    <compoundname>ns_malloc_tests.h</compoundname>
    <includes refid="ns__malloc_8h" local="yes">ns_malloc.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ns_malloc.h</label>
        <link refid="ns__malloc_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h</label>
        <link refid="ns__malloc__tests_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>FreeRTOS.h</label>
      </node>
      <node id="4">
        <label>am_bsp.h</label>
      </node>
      <node id="5">
        <label>am_mcu_apollo.h</label>
      </node>
      <node id="6">
        <label>am_util.h</label>
      </node>
      <node id="7">
        <label>portable.h</label>
      </node>
      <node id="8">
        <label>portmacro.h</label>
      </node>
      <node id="9">
        <label>rtos.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ns__malloc__tests_8h_1a6bd3f6ada23e92e1d4266e2f85fdf622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_malloc_tests_pre_test_hook</definition>
        <argsstring>()</argsstring>
        <name>ns_malloc_tests_pre_test_hook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" line="2" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.c" bodystart="8" bodyend="10" declfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" declline="2" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ns__malloc__tests_8h_1a288089f0cebf3f4b67b7e7dd06763b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_malloc_tests_post_test_hook</definition>
        <argsstring>()</argsstring>
        <name>ns_malloc_tests_post_test_hook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" line="3" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.c" bodystart="11" bodyend="13" declfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" declline="3" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ns__malloc__tests_8h_1a0dc16ba73e7e62ee4f504a1ebfaa851e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_malloc_test_basic_allocation</definition>
        <argsstring>()</argsstring>
        <name>ns_malloc_test_basic_allocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" line="4" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.c" bodystart="15" bodyend="28" declfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" declline="4" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ns__malloc__tests_8h_1a6aec62df66dae1076ae73907fe5309df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_malloc_test_past_max_size</definition>
        <argsstring>()</argsstring>
        <name>ns_malloc_test_past_max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" line="5" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.c" bodystart="31" bodyend="35" declfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" declline="5" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ns__malloc__tests_8h_1a1278400336e99763852c3e92c0d0e28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_malloc_test_allocate_zero</definition>
        <argsstring>()</argsstring>
        <name>ns_malloc_test_allocate_zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" line="6" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.c" bodystart="38" bodyend="41" declfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" declline="6" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ns__malloc__tests_8h_1afe7288c1bd6fac9d6be2cbc433886abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns_malloc_test_no_overlap_in_heap_allocations</definition>
        <argsstring>()</argsstring>
        <name>ns_malloc_test_no_overlap_in_heap_allocations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" line="7" column="6" bodyfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.c" bodystart="43" bodyend="86" declfile="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h" declline="7" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ns_malloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_malloc_tests_pre_test_hook();</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_malloc_tests_post_test_hook();</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_malloc_test_basic_allocation();</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_malloc_test_past_max_size();</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_malloc_test_allocate_zero();</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ns_malloc_test_no_overlap_in_heap_allocations();</highlight></codeline>
    </programlisting>
    <location file="neuralSPOT/neuralspot/ns-utils/tests/ns_malloc_tests.h"/>
  </compounddef>
</doxygen>
